// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`abstract-table renders correctly 1`] = `
<AbstractTableTest>
  <AbstractTable
    autoHeight={false}
    buttons={
      Array [
        Object {
          "click": [Function],
          "icon": <ForwardRef(PlusOutlined) />,
          "name": "新增",
        },
        Object {
          "click": [Function],
          "name": "导出",
          "target": "cell",
        },
        Object {
          "action": "up",
          "name": "单个上架",
          "select": "single",
        },
        Object {
          "click": [Function],
          "name": "批量上架",
          "select": "multiple",
        },
        Object {
          "click": [Function],
          "confirm": "您确定要上架?",
          "enable": [Function],
          "name": "上架",
          "target": "cell",
        },
        Object {
          "action": "view",
          "name": "查看",
          "target": "cell",
        },
        Object {
          "click": [Function],
          "confirm": "您确定批量下架选择的项?",
          "enable": [Function],
          "name": "批量下架",
          "select": "multiple",
        },
      ]
    }
    className=""
    columns={
      Array [
        Object {
          "name": "name",
          "title": "用户名",
        },
        Object {
          "enums": Object {
            "女": 2,
            "男": 1,
          },
          "name": "sex",
          "title": "性别",
        },
        Object {
          "enums": Object {
            "启用": 2,
            "新建": 1,
            "禁用": 3,
          },
          "name": "status",
          "title": "状态",
        },
        Object {
          "name": "department",
          "title": "部门",
        },
      ]
    }
    data={Object {}}
    filters={
      Object {
        "name": "status",
        "tabs": [Function],
      }
    }
    initQuery={true}
    onActionRoute={[Function]}
    onQuery={[Function]}
    onSelectRows={[Function]}
    order="descend"
    pageSize={100}
    paramMode="mix"
    renderTopBar={[Function]}
    rowKey="id"
    searchFields={
      Array [
        Object {
          "initialValue": "赵",
          "name": "name",
          "title": "名称",
        },
        Object {
          "enums": Object {
            "女": 2,
            "男": 1,
          },
          "name": "sex",
          "title": "性别",
        },
        Object {
          "api": Array [
            "name",
            "code",
            [Function],
          ],
          "name": "department",
          "title": "部门",
        },
      ]
    }
    select="none"
    selectedRows={Array []}
    sort="name"
    style={
      Object {
        "padding": "0px 24px",
      }
    }
  >
    <div
      className=" has-top-actions  abstract-table-wrapper abstract-flex"
      style={
        Object {
          "padding": "0px 24px",
        }
      }
    >
      <AbstractSearch
        fields={
          Array [
            Object {
              "initialValue": "赵",
              "name": "name",
              "title": "名称",
            },
            Object {
              "enums": Object {
                "女": 2,
                "男": 1,
              },
              "name": "sex",
              "title": "性别",
            },
            Object {
              "api": Array [
                "name",
                "code",
                [Function],
              ],
              "name": "department",
              "title": "部门",
            },
          ]
        }
        onQuery={[Function]}
      >
        <div
          className="abstract-search-form abstract-form"
        >
          <ForwardRef(InternalForm)
            onFinish={[Function]}
            onValuesChange={[Function]}
          >
            <SizeContextProvider>
              <ForwardRef(Form)
                className="ant-form ant-form-horizontal"
                form={
                  Object {
                    "__INTERNAL__": Object {
                      "itemRef": [Function],
                      "name": undefined,
                    },
                    "getFieldError": [Function],
                    "getFieldInstance": [Function],
                    "getFieldValue": [Function],
                    "getFieldsError": [Function],
                    "getFieldsValue": [Function],
                    "getInternalHooks": [Function],
                    "isFieldTouched": [Function],
                    "isFieldValidating": [Function],
                    "isFieldsTouched": [Function],
                    "isFieldsValidating": [Function],
                    "resetFields": [Function],
                    "scrollToField": [Function],
                    "setFields": [Function],
                    "setFieldsValue": [Function],
                    "submit": [Function],
                    "validateFields": [Function],
                  }
                }
                onFinish={[Function]}
                onFinishFailed={[Function]}
                onValuesChange={[Function]}
              >
                <form
                  className="ant-form ant-form-horizontal"
                  onReset={[Function]}
                  onSubmit={[Function]}
                >
                  <Row
                    gutter={24}
                  >
                    <div
                      className="ant-row"
                      style={
                        Object {
                          "marginLeft": -12,
                          "marginRight": -12,
                        }
                      }
                    >
                      <AbstractForm
                        form={
                          Object {
                            "current": Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": undefined,
                              },
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                            },
                          }
                        }
                        groups={
                          Array [
                            Object {
                              "initialValue": "赵",
                              "name": "name",
                              "render": [Function],
                              "span": undefined,
                              "title": "名称",
                            },
                            Object {
                              "enums": Object {
                                "女": 2,
                                "男": 1,
                              },
                              "name": "sex",
                              "render": [Function],
                              "span": undefined,
                              "title": "性别",
                            },
                            Object {
                              "api": Array [
                                "name",
                                "code",
                                [Function],
                              ],
                              "name": "department",
                              "render": [Function],
                              "span": undefined,
                              "title": "部门",
                            },
                          ]
                        }
                        wrapper={false}
                      >
                        <Dynamic
                          form={
                            Object {
                              "current": Object {
                                "__INTERNAL__": Object {
                                  "itemRef": [Function],
                                  "name": undefined,
                                },
                                "getFieldError": [Function],
                                "getFieldInstance": [Function],
                                "getFieldValue": [Function],
                                "getFieldsError": [Function],
                                "getFieldsValue": [Function],
                                "getInternalHooks": [Function],
                                "isFieldTouched": [Function],
                                "isFieldValidating": [Function],
                                "isFieldsTouched": [Function],
                                "isFieldsValidating": [Function],
                                "resetFields": [Function],
                                "scrollToField": [Function],
                                "setFields": [Function],
                                "setFieldsValue": [Function],
                                "submit": [Function],
                                "validateFields": [Function],
                              },
                            }
                          }
                          formItemLayout={null}
                          groups={
                            Array [
                              Object {
                                "initialValue": "赵",
                                "name": "name",
                                "render": [Function],
                                "span": undefined,
                                "title": "名称",
                              },
                              Object {
                                "enums": Object {
                                  "女": 2,
                                  "男": 1,
                                },
                                "name": "sex",
                                "render": [Function],
                                "span": undefined,
                                "title": "性别",
                              },
                              Object {
                                "api": Array [
                                  "name",
                                  "code",
                                  [Function],
                                ],
                                "name": "department",
                                "render": [Function],
                                "span": undefined,
                                "title": "部门",
                              },
                            ]
                          }
                          isReadOnly={false}
                          record={Object {}}
                          rules={Object {}}
                          span={4}
                          wrapper={false}
                        >
                          <Item
                            colOption={
                              Object {
                                "className": "than-three",
                                "span": 24,
                              }
                            }
                            form={
                              Object {
                                "current": Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": undefined,
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                },
                              }
                            }
                            isReadOnly={false}
                            item={
                              Object {
                                "initialValue": "赵",
                                "name": "name",
                                "render": [Function],
                                "span": undefined,
                                "title": "名称",
                              }
                            }
                            key="form-group-item-name"
                            layout={
                              Object {
                                "labelCol": Object {
                                  "sm": Object {
                                    "span": 6,
                                  },
                                  "xs": Object {
                                    "span": 24,
                                  },
                                },
                                "wrapperCol": Object {
                                  "sm": Object {
                                    "span": 16,
                                  },
                                  "xs": Object {
                                    "span": 24,
                                  },
                                },
                              }
                            }
                            record={Object {}}
                            rules={Array []}
                          >
                            <Col
                              className="abstract-form-item-col  than-three"
                              span={24}
                            >
                              <div
                                className="ant-col ant-col-24 abstract-form-item-col  than-three"
                                style={
                                  Object {
                                    "paddingLeft": 12,
                                    "paddingRight": 12,
                                  }
                                }
                              >
                                <FormItem
                                  className="visible abstract-form-item abstract-input-name "
                                  extra={null}
                                  initialValue="赵"
                                  label="名称"
                                  labelCol={
                                    Object {
                                      "sm": Object {
                                        "span": 6,
                                      },
                                      "xs": Object {
                                        "span": 24,
                                      },
                                    }
                                  }
                                  name={
                                    Array [
                                      "name",
                                    ]
                                  }
                                  normalize={[Function]}
                                  rules={Array []}
                                  shouldUpdate={[Function]}
                                  wrapperCol={
                                    Object {
                                      "sm": Object {
                                        "span": 16,
                                      },
                                      "xs": Object {
                                        "span": 24,
                                      },
                                    }
                                  }
                                >
                                  <WrapperField
                                    className="visible abstract-form-item abstract-input-name "
                                    extra={null}
                                    initialValue="赵"
                                    label="名称"
                                    labelCol={
                                      Object {
                                        "sm": Object {
                                          "span": 6,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                    messageVariables={
                                      Object {
                                        "label": "名称",
                                      }
                                    }
                                    name={
                                      Array [
                                        "name",
                                      ]
                                    }
                                    normalize={[Function]}
                                    onReset={[Function]}
                                    rules={Array []}
                                    shouldUpdate={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    wrapperCol={
                                      Object {
                                        "sm": Object {
                                          "span": 16,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                  >
                                    <Field
                                      className="visible abstract-form-item abstract-input-name "
                                      extra={null}
                                      fieldContext={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": undefined,
                                          },
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                          "validateTrigger": "onChange",
                                        }
                                      }
                                      initialValue="赵"
                                      key="_name"
                                      label="名称"
                                      labelCol={
                                        Object {
                                          "sm": Object {
                                            "span": 6,
                                          },
                                          "xs": Object {
                                            "span": 24,
                                          },
                                        }
                                      }
                                      messageVariables={
                                        Object {
                                          "label": "名称",
                                        }
                                      }
                                      name={
                                        Array [
                                          "name",
                                        ]
                                      }
                                      normalize={[Function]}
                                      onReset={[Function]}
                                      rules={Array []}
                                      shouldUpdate={[Function]}
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                      wrapperCol={
                                        Object {
                                          "sm": Object {
                                            "span": 16,
                                          },
                                          "xs": Object {
                                            "span": 24,
                                          },
                                        }
                                      }
                                    >
                                      <Row
                                        className="ant-form-item visible abstract-form-item abstract-input-name "
                                        key="row"
                                      >
                                        <div
                                          className="ant-row ant-form-item visible abstract-form-item abstract-input-name "
                                          style={Object {}}
                                        >
                                          <FormItemLabel
                                            className="visible abstract-form-item abstract-input-name "
                                            extra={null}
                                            htmlFor="name"
                                            initialValue="赵"
                                            label="名称"
                                            labelCol={
                                              Object {
                                                "sm": Object {
                                                  "span": 6,
                                                },
                                                "xs": Object {
                                                  "span": 24,
                                                },
                                              }
                                            }
                                            name={
                                              Array [
                                                "name",
                                              ]
                                            }
                                            normalize={[Function]}
                                            prefixCls="ant-form"
                                            required={false}
                                            requiredMark={true}
                                            rules={Array []}
                                            shouldUpdate={[Function]}
                                            wrapperCol={
                                              Object {
                                                "sm": Object {
                                                  "span": 16,
                                                },
                                                "xs": Object {
                                                  "span": 24,
                                                },
                                              }
                                            }
                                          >
                                            <Col
                                              className="ant-form-item-label"
                                              sm={
                                                Object {
                                                  "span": 6,
                                                }
                                              }
                                              xs={
                                                Object {
                                                  "span": 24,
                                                }
                                              }
                                            >
                                              <div
                                                className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                                style={Object {}}
                                              >
                                                <label
                                                  className=""
                                                  htmlFor="name"
                                                  title="名称"
                                                >
                                                  名称
                                                </label>
                                              </div>
                                            </Col>
                                          </FormItemLabel>
                                          <FormItemInput
                                            className="visible abstract-form-item abstract-input-name "
                                            errors={Array []}
                                            extra={null}
                                            initialValue="赵"
                                            label="名称"
                                            labelCol={
                                              Object {
                                                "sm": Object {
                                                  "span": 6,
                                                },
                                                "xs": Object {
                                                  "span": 24,
                                                },
                                              }
                                            }
                                            name={
                                              Array [
                                                "name",
                                              ]
                                            }
                                            normalize={[Function]}
                                            onDomErrorVisibleChange={[Function]}
                                            prefixCls="ant-form"
                                            rules={Array []}
                                            shouldUpdate={[Function]}
                                            status=""
                                            touched={false}
                                            validateStatus=""
                                            validating={false}
                                            wrapperCol={
                                              Object {
                                                "sm": Object {
                                                  "span": 16,
                                                },
                                                "xs": Object {
                                                  "span": 24,
                                                },
                                              }
                                            }
                                          >
                                            <Col
                                              className="ant-form-item-control"
                                              sm={
                                                Object {
                                                  "span": 16,
                                                }
                                              }
                                              xs={
                                                Object {
                                                  "span": 24,
                                                }
                                              }
                                            >
                                              <div
                                                className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-16"
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-form-item-control-input"
                                                >
                                                  <div
                                                    className="ant-form-item-control-input-content"
                                                  >
                                                    <Component
                                                      update={2}
                                                      value="赵"
                                                    >
                                                      <InputWrap
                                                        form={
                                                          Object {
                                                            "current": Object {
                                                              "__INTERNAL__": Object {
                                                                "itemRef": [Function],
                                                                "name": undefined,
                                                              },
                                                              "getFieldError": [Function],
                                                              "getFieldInstance": [Function],
                                                              "getFieldValue": [Function],
                                                              "getFieldsError": [Function],
                                                              "getFieldsValue": [Function],
                                                              "getInternalHooks": [Function],
                                                              "isFieldTouched": [Function],
                                                              "isFieldValidating": [Function],
                                                              "isFieldsTouched": [Function],
                                                              "isFieldsValidating": [Function],
                                                              "resetFields": [Function],
                                                              "scrollToField": [Function],
                                                              "setFields": [Function],
                                                              "setFieldsValue": [Function],
                                                              "submit": [Function],
                                                              "validateFields": [Function],
                                                            },
                                                          }
                                                        }
                                                        id="name"
                                                        isReadOnly={false}
                                                        item={
                                                          Object {
                                                            "initialValue": "赵",
                                                            "name": "name",
                                                            "render": [Function],
                                                            "span": undefined,
                                                            "title": "名称",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        record={Object {}}
                                                        value="赵"
                                                        valueFormatter={[Function]}
                                                      >
                                                        <div
                                                          id="name"
                                                        >
                                                          <Input
                                                            disabled={false}
                                                            onChange={[Function]}
                                                            type="text"
                                                            value="赵"
                                                          >
                                                            <ClearableLabeledInput
                                                              bordered={true}
                                                              disabled={false}
                                                              element={
                                                                <input
                                                                  className="ant-input"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  type="text"
                                                                  value="赵"
                                                                />
                                                              }
                                                              focused={false}
                                                              handleReset={[Function]}
                                                              inputType="input"
                                                              onChange={[Function]}
                                                              prefixCls="ant-input"
                                                              triggerFocus={[Function]}
                                                              type="text"
                                                              value="赵"
                                                            >
                                                              <input
                                                                className="ant-input"
                                                                disabled={false}
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                type="text"
                                                                value="赵"
                                                              />
                                                            </ClearableLabeledInput>
                                                          </Input>
                                                        </div>
                                                      </InputWrap>
                                                    </Component>
                                                  </div>
                                                </div>
                                                <ErrorList
                                                  errors={Array []}
                                                  onDomErrorVisibleChange={[Function]}
                                                >
                                                  <CSSMotion
                                                    motionAppear={true}
                                                    motionDeadline={500}
                                                    motionName="ant-show-help"
                                                    onLeaveEnd={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </ErrorList>
                                              </div>
                                            </Col>
                                          </FormItemInput>
                                        </div>
                                      </Row>
                                    </Field>
                                  </WrapperField>
                                </FormItem>
                              </div>
                            </Col>
                          </Item>
                          <Item
                            colOption={
                              Object {
                                "className": "than-three",
                                "span": 24,
                              }
                            }
                            form={
                              Object {
                                "current": Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": undefined,
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                },
                              }
                            }
                            isReadOnly={false}
                            item={
                              Object {
                                "enums": Object {
                                  "女": 2,
                                  "男": 1,
                                },
                                "name": "sex",
                                "render": [Function],
                                "span": undefined,
                                "title": "性别",
                              }
                            }
                            key="form-group-item-sex"
                            layout={
                              Object {
                                "labelCol": Object {
                                  "sm": Object {
                                    "span": 6,
                                  },
                                  "xs": Object {
                                    "span": 24,
                                  },
                                },
                                "wrapperCol": Object {
                                  "sm": Object {
                                    "span": 16,
                                  },
                                  "xs": Object {
                                    "span": 24,
                                  },
                                },
                              }
                            }
                            record={Object {}}
                            rules={Array []}
                          >
                            <Col
                              className="abstract-form-item-col  than-three"
                              span={24}
                            >
                              <div
                                className="ant-col ant-col-24 abstract-form-item-col  than-three"
                                style={
                                  Object {
                                    "paddingLeft": 12,
                                    "paddingRight": 12,
                                  }
                                }
                              >
                                <FormItem
                                  className="visible abstract-form-item abstract-input-sex "
                                  extra={null}
                                  label="性别"
                                  labelCol={
                                    Object {
                                      "sm": Object {
                                        "span": 6,
                                      },
                                      "xs": Object {
                                        "span": 24,
                                      },
                                    }
                                  }
                                  name={
                                    Array [
                                      "sex",
                                    ]
                                  }
                                  normalize={[Function]}
                                  rules={Array []}
                                  shouldUpdate={[Function]}
                                  wrapperCol={
                                    Object {
                                      "sm": Object {
                                        "span": 16,
                                      },
                                      "xs": Object {
                                        "span": 24,
                                      },
                                    }
                                  }
                                >
                                  <WrapperField
                                    className="visible abstract-form-item abstract-input-sex "
                                    extra={null}
                                    label="性别"
                                    labelCol={
                                      Object {
                                        "sm": Object {
                                          "span": 6,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                    messageVariables={
                                      Object {
                                        "label": "性别",
                                      }
                                    }
                                    name={
                                      Array [
                                        "sex",
                                      ]
                                    }
                                    normalize={[Function]}
                                    onReset={[Function]}
                                    rules={Array []}
                                    shouldUpdate={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    wrapperCol={
                                      Object {
                                        "sm": Object {
                                          "span": 16,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                  >
                                    <Field
                                      className="visible abstract-form-item abstract-input-sex "
                                      extra={null}
                                      fieldContext={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": undefined,
                                          },
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                          "validateTrigger": "onChange",
                                        }
                                      }
                                      key="_sex"
                                      label="性别"
                                      labelCol={
                                        Object {
                                          "sm": Object {
                                            "span": 6,
                                          },
                                          "xs": Object {
                                            "span": 24,
                                          },
                                        }
                                      }
                                      messageVariables={
                                        Object {
                                          "label": "性别",
                                        }
                                      }
                                      name={
                                        Array [
                                          "sex",
                                        ]
                                      }
                                      normalize={[Function]}
                                      onReset={[Function]}
                                      rules={Array []}
                                      shouldUpdate={[Function]}
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                      wrapperCol={
                                        Object {
                                          "sm": Object {
                                            "span": 16,
                                          },
                                          "xs": Object {
                                            "span": 24,
                                          },
                                        }
                                      }
                                    >
                                      <Row
                                        className="ant-form-item visible abstract-form-item abstract-input-sex "
                                        key="row"
                                      >
                                        <div
                                          className="ant-row ant-form-item visible abstract-form-item abstract-input-sex "
                                          style={Object {}}
                                        >
                                          <FormItemLabel
                                            className="visible abstract-form-item abstract-input-sex "
                                            extra={null}
                                            htmlFor="sex"
                                            label="性别"
                                            labelCol={
                                              Object {
                                                "sm": Object {
                                                  "span": 6,
                                                },
                                                "xs": Object {
                                                  "span": 24,
                                                },
                                              }
                                            }
                                            name={
                                              Array [
                                                "sex",
                                              ]
                                            }
                                            normalize={[Function]}
                                            prefixCls="ant-form"
                                            required={false}
                                            requiredMark={true}
                                            rules={Array []}
                                            shouldUpdate={[Function]}
                                            wrapperCol={
                                              Object {
                                                "sm": Object {
                                                  "span": 16,
                                                },
                                                "xs": Object {
                                                  "span": 24,
                                                },
                                              }
                                            }
                                          >
                                            <Col
                                              className="ant-form-item-label"
                                              sm={
                                                Object {
                                                  "span": 6,
                                                }
                                              }
                                              xs={
                                                Object {
                                                  "span": 24,
                                                }
                                              }
                                            >
                                              <div
                                                className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                                style={Object {}}
                                              >
                                                <label
                                                  className=""
                                                  htmlFor="sex"
                                                  title="性别"
                                                >
                                                  性别
                                                </label>
                                              </div>
                                            </Col>
                                          </FormItemLabel>
                                          <FormItemInput
                                            className="visible abstract-form-item abstract-input-sex "
                                            errors={Array []}
                                            extra={null}
                                            label="性别"
                                            labelCol={
                                              Object {
                                                "sm": Object {
                                                  "span": 6,
                                                },
                                                "xs": Object {
                                                  "span": 24,
                                                },
                                              }
                                            }
                                            name={
                                              Array [
                                                "sex",
                                              ]
                                            }
                                            normalize={[Function]}
                                            onDomErrorVisibleChange={[Function]}
                                            prefixCls="ant-form"
                                            rules={Array []}
                                            shouldUpdate={[Function]}
                                            status=""
                                            touched={false}
                                            validateStatus=""
                                            validating={false}
                                            wrapperCol={
                                              Object {
                                                "sm": Object {
                                                  "span": 16,
                                                },
                                                "xs": Object {
                                                  "span": 24,
                                                },
                                              }
                                            }
                                          >
                                            <Col
                                              className="ant-form-item-control"
                                              sm={
                                                Object {
                                                  "span": 16,
                                                }
                                              }
                                              xs={
                                                Object {
                                                  "span": 24,
                                                }
                                              }
                                            >
                                              <div
                                                className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-16"
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-form-item-control-input"
                                                >
                                                  <div
                                                    className="ant-form-item-control-input-content"
                                                  >
                                                    <Component
                                                      update={2}
                                                    >
                                                      <InputWrap
                                                        form={
                                                          Object {
                                                            "current": Object {
                                                              "__INTERNAL__": Object {
                                                                "itemRef": [Function],
                                                                "name": undefined,
                                                              },
                                                              "getFieldError": [Function],
                                                              "getFieldInstance": [Function],
                                                              "getFieldValue": [Function],
                                                              "getFieldsError": [Function],
                                                              "getFieldsValue": [Function],
                                                              "getInternalHooks": [Function],
                                                              "isFieldTouched": [Function],
                                                              "isFieldValidating": [Function],
                                                              "isFieldsTouched": [Function],
                                                              "isFieldsValidating": [Function],
                                                              "resetFields": [Function],
                                                              "scrollToField": [Function],
                                                              "setFields": [Function],
                                                              "setFieldsValue": [Function],
                                                              "submit": [Function],
                                                              "validateFields": [Function],
                                                            },
                                                          }
                                                        }
                                                        id="sex"
                                                        isReadOnly={false}
                                                        item={
                                                          Object {
                                                            "enums": Object {
                                                              "女": 2,
                                                              "男": 1,
                                                            },
                                                            "name": "sex",
                                                            "render": [Function],
                                                            "span": undefined,
                                                            "title": "性别",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        record={Object {}}
                                                        valueFormatter={[Function]}
                                                      >
                                                        <div
                                                          id="sex"
                                                        >
                                                          <AdvancePicker
                                                            allOption={true}
                                                            allowClear={true}
                                                            api={null}
                                                            data={
                                                              Object {
                                                                "女": 2,
                                                                "男": 1,
                                                              }
                                                            }
                                                            disabled={false}
                                                            format={[Function]}
                                                            labelName="label"
                                                            onChange={[Function]}
                                                            query={Object {}}
                                                            type="local"
                                                            valueName="value"
                                                          >
                                                            <ForwardRef(InternalSelect)
                                                              allowClear={true}
                                                              className="undefined advance-picker"
                                                              data={
                                                                Object {
                                                                  "女": 2,
                                                                  "男": 1,
                                                                }
                                                              }
                                                              disabled={false}
                                                              filterOption={[Function]}
                                                              notFoundContent="无匹配数据"
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              optionLabelProp="children"
                                                              query={Object {}}
                                                              showSearch={true}
                                                            >
                                                              <Select
                                                                allowClear={true}
                                                                className="undefined advance-picker"
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                data={
                                                                  Object {
                                                                    "女": 2,
                                                                    "男": 1,
                                                                  }
                                                                }
                                                                disabled={false}
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputIcon={[Function]}
                                                                listHeight={256}
                                                                listItemHeight={24}
                                                                menuItemSelectedIcon={null}
                                                                notFoundContent="无匹配数据"
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                optionLabelProp="children"
                                                                prefixCls="ant-select"
                                                                query={Object {}}
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                showSearch={true}
                                                                transitionName="ant-slide-up"
                                                              >
                                                                <ForwardRef(Select)
                                                                  allowClear={true}
                                                                  className="undefined advance-picker"
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  data={
                                                                    Object {
                                                                      "女": 2,
                                                                      "男": 1,
                                                                    }
                                                                  }
                                                                  disabled={false}
                                                                  dropdownClassName=""
                                                                  filterOption={[Function]}
                                                                  inputIcon={[Function]}
                                                                  listHeight={256}
                                                                  listItemHeight={24}
                                                                  menuItemSelectedIcon={null}
                                                                  notFoundContent="无匹配数据"
                                                                  onChange={[Function]}
                                                                  onPopupScroll={[Function]}
                                                                  onSearch={[Function]}
                                                                  optionLabelProp="children"
                                                                  prefixCls="ant-select"
                                                                  query={Object {}}
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  showSearch={true}
                                                                  transitionName="ant-slide-up"
                                                                >
                                                                  <div
                                                                    className="ant-select undefined advance-picker ant-select-single ant-select-allow-clear ant-select-show-arrow ant-select-show-search"
                                                                    data={
                                                                      Object {
                                                                        "女": 2,
                                                                        "男": 1,
                                                                      }
                                                                    }
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    query={Object {}}
                                                                  >
                                                                    <SelectTrigger
                                                                      containerWidth={null}
                                                                      disabled={false}
                                                                      dropdownClassName=""
                                                                      empty={false}
                                                                      getTriggerDOMNode={[Function]}
                                                                      popupElement={
                                                                        <ForwardRef(OptionList)
                                                                          childrenAsData={true}
                                                                          defaultActiveFirstOption={true}
                                                                          flattenOptions={
                                                                            Array [
                                                                              Object {
                                                                                "data": Object {
                                                                                  "children": "全部",
                                                                                  "key": "_0",
                                                                                  "value": "",
                                                                                },
                                                                                "groupOption": false,
                                                                                "key": "_0",
                                                                              },
                                                                              Object {
                                                                                "data": Object {
                                                                                  "children": "男",
                                                                                  "key": "1_1",
                                                                                  "value": "1",
                                                                                },
                                                                                "groupOption": false,
                                                                                "key": "1_1",
                                                                              },
                                                                              Object {
                                                                                "data": Object {
                                                                                  "children": "女",
                                                                                  "key": "2_2",
                                                                                  "value": "2",
                                                                                },
                                                                                "groupOption": false,
                                                                                "key": "2_2",
                                                                              },
                                                                            ]
                                                                          }
                                                                          height={256}
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          itemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent="无匹配数据"
                                                                          onActiveValue={[Function]}
                                                                          onMouseEnter={[Function]}
                                                                          onScroll={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          options={
                                                                            Array [
                                                                              Object {
                                                                                "children": "全部",
                                                                                "key": "_0",
                                                                                "value": "",
                                                                              },
                                                                              Object {
                                                                                "children": "男",
                                                                                "key": "1_1",
                                                                                "value": "1",
                                                                              },
                                                                              Object {
                                                                                "children": "女",
                                                                                "key": "2_2",
                                                                                "value": "2",
                                                                              },
                                                                            ]
                                                                          }
                                                                          prefixCls="ant-select"
                                                                          searchValue=""
                                                                          values={Set {}}
                                                                          virtual={true}
                                                                        />
                                                                      }
                                                                      prefixCls="ant-select"
                                                                      transitionName="ant-slide-up"
                                                                    >
                                                                      <Trigger
                                                                        action={Array []}
                                                                        afterPopupVisibleChange={[Function]}
                                                                        autoDestroy={false}
                                                                        blurDelay={0.15}
                                                                        builtinPlacements={
                                                                          Object {
                                                                            "bottomLeft": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "tl",
                                                                                "bl",
                                                                              ],
                                                                            },
                                                                            "bottomRight": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "tr",
                                                                                "br",
                                                                              ],
                                                                            },
                                                                            "topLeft": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                -4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "bl",
                                                                                "tl",
                                                                              ],
                                                                            },
                                                                            "topRight": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                -4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "br",
                                                                                "tr",
                                                                              ],
                                                                            },
                                                                          }
                                                                        }
                                                                        defaultPopupVisible={false}
                                                                        destroyPopupOnHide={false}
                                                                        focusDelay={0}
                                                                        getDocument={[Function]}
                                                                        getPopupClassNameFromAlign={[Function]}
                                                                        getTriggerDOMNode={[Function]}
                                                                        hideAction={Array []}
                                                                        mask={false}
                                                                        maskClosable={true}
                                                                        mouseEnterDelay={0}
                                                                        mouseLeaveDelay={0.1}
                                                                        onPopupAlign={[Function]}
                                                                        onPopupVisibleChange={[Function]}
                                                                        popup={
                                                                          <div>
                                                                            <ForwardRef(OptionList)
                                                                              childrenAsData={true}
                                                                              defaultActiveFirstOption={true}
                                                                              flattenOptions={
                                                                                Array [
                                                                                  Object {
                                                                                    "data": Object {
                                                                                      "children": "全部",
                                                                                      "key": "_0",
                                                                                      "value": "",
                                                                                    },
                                                                                    "groupOption": false,
                                                                                    "key": "_0",
                                                                                  },
                                                                                  Object {
                                                                                    "data": Object {
                                                                                      "children": "男",
                                                                                      "key": "1_1",
                                                                                      "value": "1",
                                                                                    },
                                                                                    "groupOption": false,
                                                                                    "key": "1_1",
                                                                                  },
                                                                                  Object {
                                                                                    "data": Object {
                                                                                      "children": "女",
                                                                                      "key": "2_2",
                                                                                      "value": "2",
                                                                                    },
                                                                                    "groupOption": false,
                                                                                    "key": "2_2",
                                                                                  },
                                                                                ]
                                                                              }
                                                                              height={256}
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              itemHeight={24}
                                                                              menuItemSelectedIcon={null}
                                                                              multiple={false}
                                                                              notFoundContent="无匹配数据"
                                                                              onActiveValue={[Function]}
                                                                              onMouseEnter={[Function]}
                                                                              onScroll={[Function]}
                                                                              onSelect={[Function]}
                                                                              onToggleOpen={[Function]}
                                                                              options={
                                                                                Array [
                                                                                  Object {
                                                                                    "children": "全部",
                                                                                    "key": "_0",
                                                                                    "value": "",
                                                                                  },
                                                                                  Object {
                                                                                    "children": "男",
                                                                                    "key": "1_1",
                                                                                    "value": "1",
                                                                                  },
                                                                                  Object {
                                                                                    "children": "女",
                                                                                    "key": "2_2",
                                                                                    "value": "2",
                                                                                  },
                                                                                ]
                                                                              }
                                                                              prefixCls="ant-select"
                                                                              searchValue=""
                                                                              values={Set {}}
                                                                              virtual={true}
                                                                            />
                                                                          </div>
                                                                        }
                                                                        popupAlign={Object {}}
                                                                        popupClassName=""
                                                                        popupPlacement="bottomLeft"
                                                                        popupStyle={
                                                                          Object {
                                                                            "minWidth": null,
                                                                            "width": null,
                                                                          }
                                                                        }
                                                                        popupTransitionName="ant-slide-up"
                                                                        prefixCls="ant-select-dropdown"
                                                                        showAction={Array []}
                                                                      >
                                                                        <Selector
                                                                          accessibilityIndex={0}
                                                                          activeValue={null}
                                                                          allowClear={true}
                                                                          className="undefined advance-picker"
                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                          data={
                                                                            Object {
                                                                              "女": 2,
                                                                              "男": 1,
                                                                            }
                                                                          }
                                                                          disabled={false}
                                                                          domRef={
                                                                            Object {
                                                                              "current": <div
                                                                                class="ant-select-selector"
                                                                              >
                                                                                <span
                                                                                  class="ant-select-selection-search"
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    role="combobox"
                                                                                    type="search"
                                                                                    value=""
                                                                                  />
                                                                                </span>
                                                                                <span
                                                                                  class="ant-select-selection-placeholder"
                                                                                />
                                                                              </div>,
                                                                            }
                                                                          }
                                                                          dropdownClassName=""
                                                                          filterOption={[Function]}
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          inputElement={null}
                                                                          inputIcon={[Function]}
                                                                          key="trigger"
                                                                          listHeight={256}
                                                                          listItemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent="无匹配数据"
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          onSearchSubmit={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          optionLabelProp="children"
                                                                          prefixCls="ant-select"
                                                                          query={Object {}}
                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                          searchValue=""
                                                                          showSearch={true}
                                                                          tokenWithEnter={false}
                                                                          transitionName="ant-slide-up"
                                                                          values={Array []}
                                                                        >
                                                                          <div
                                                                            className="ant-select-selector"
                                                                            onClick={[Function]}
                                                                            onMouseDown={[Function]}
                                                                          >
                                                                            <SingleSelector
                                                                              accessibilityIndex={0}
                                                                              activeValue={null}
                                                                              allowClear={true}
                                                                              className="undefined advance-picker"
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              data={
                                                                                Object {
                                                                                  "女": 2,
                                                                                  "男": 1,
                                                                                }
                                                                              }
                                                                              disabled={false}
                                                                              domRef={
                                                                                Object {
                                                                                  "current": <div
                                                                                    class="ant-select-selector"
                                                                                  >
                                                                                    <span
                                                                                      class="ant-select-selection-search"
                                                                                    >
                                                                                      <input
                                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                        aria-autocomplete="list"
                                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                        aria-haspopup="listbox"
                                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                        autocomplete="off"
                                                                                        class="ant-select-selection-search-input"
                                                                                        id="rc_select_TEST_OR_SSR"
                                                                                        role="combobox"
                                                                                        type="search"
                                                                                        value=""
                                                                                      />
                                                                                    </span>
                                                                                    <span
                                                                                      class="ant-select-selection-placeholder"
                                                                                    />
                                                                                  </div>,
                                                                                }
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              inputElement={null}
                                                                              inputIcon={[Function]}
                                                                              inputRef={
                                                                                Object {
                                                                                  "current": <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    role="combobox"
                                                                                    type="search"
                                                                                    value=""
                                                                                  />,
                                                                                }
                                                                              }
                                                                              listHeight={256}
                                                                              listItemHeight={24}
                                                                              menuItemSelectedIcon={null}
                                                                              multiple={false}
                                                                              notFoundContent="无匹配数据"
                                                                              onChange={[Function]}
                                                                              onInputChange={[Function]}
                                                                              onInputCompositionEnd={[Function]}
                                                                              onInputCompositionStart={[Function]}
                                                                              onInputKeyDown={[Function]}
                                                                              onInputMouseDown={[Function]}
                                                                              onInputPaste={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              onSearchSubmit={[Function]}
                                                                              onSelect={[Function]}
                                                                              onToggleOpen={[Function]}
                                                                              optionLabelProp="children"
                                                                              prefixCls="ant-select"
                                                                              query={Object {}}
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              searchValue=""
                                                                              showSearch={true}
                                                                              tokenWithEnter={false}
                                                                              transitionName="ant-slide-up"
                                                                              values={Array []}
                                                                            >
                                                                              <span
                                                                                className="ant-select-selection-search"
                                                                              >
                                                                                <Input
                                                                                  accessibilityIndex={0}
                                                                                  attrs={Object {}}
                                                                                  disabled={false}
                                                                                  editable={true}
                                                                                  id="rc_select_TEST_OR_SSR"
                                                                                  inputElement={null}
                                                                                  onChange={[Function]}
                                                                                  onCompositionEnd={[Function]}
                                                                                  onCompositionStart={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onPaste={[Function]}
                                                                                  prefixCls="ant-select"
                                                                                  value=""
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autoComplete="off"
                                                                                    className="ant-select-selection-search-input"
                                                                                    disabled={false}
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    onChange={[Function]}
                                                                                    onCompositionEnd={[Function]}
                                                                                    onCompositionStart={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onPaste={[Function]}
                                                                                    readOnly={false}
                                                                                    role="combobox"
                                                                                    style={
                                                                                      Object {
                                                                                        "opacity": null,
                                                                                      }
                                                                                    }
                                                                                    type="search"
                                                                                    unselectable={null}
                                                                                    value=""
                                                                                  />
                                                                                </Input>
                                                                              </span>
                                                                              <span
                                                                                className="ant-select-selection-placeholder"
                                                                              />
                                                                            </SingleSelector>
                                                                          </div>
                                                                        </Selector>
                                                                      </Trigger>
                                                                    </SelectTrigger>
                                                                    <TransBtn
                                                                      className="ant-select-arrow"
                                                                      customizeIcon={[Function]}
                                                                      customizeIconProps={
                                                                        Object {
                                                                          "focused": false,
                                                                          "loading": undefined,
                                                                          "open": undefined,
                                                                          "searchValue": "",
                                                                          "showSearch": true,
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-arrow"
                                                                        onMouseDown={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "WebkitUserSelect": "none",
                                                                            "userSelect": "none",
                                                                          }
                                                                        }
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(DownOutlined)
                                                                          className="ant-select-suffix"
                                                                        >
                                                                          <AntdIcon
                                                                            className="ant-select-suffix"
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "down",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="down"
                                                                              className="anticon anticon-down ant-select-suffix"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "down",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="down"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-down"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                                    key="svg-down-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(DownOutlined)>
                                                                      </span>
                                                                    </TransBtn>
                                                                  </div>
                                                                </ForwardRef(Select)>
                                                              </Select>
                                                            </ForwardRef(InternalSelect)>
                                                          </AdvancePicker>
                                                        </div>
                                                      </InputWrap>
                                                    </Component>
                                                  </div>
                                                </div>
                                                <ErrorList
                                                  errors={Array []}
                                                  onDomErrorVisibleChange={[Function]}
                                                >
                                                  <CSSMotion
                                                    motionAppear={true}
                                                    motionDeadline={500}
                                                    motionName="ant-show-help"
                                                    onLeaveEnd={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </ErrorList>
                                              </div>
                                            </Col>
                                          </FormItemInput>
                                        </div>
                                      </Row>
                                    </Field>
                                  </WrapperField>
                                </FormItem>
                              </div>
                            </Col>
                          </Item>
                          <Item
                            colOption={
                              Object {
                                "className": "than-three",
                                "span": 24,
                              }
                            }
                            form={
                              Object {
                                "current": Object {
                                  "__INTERNAL__": Object {
                                    "itemRef": [Function],
                                    "name": undefined,
                                  },
                                  "getFieldError": [Function],
                                  "getFieldInstance": [Function],
                                  "getFieldValue": [Function],
                                  "getFieldsError": [Function],
                                  "getFieldsValue": [Function],
                                  "getInternalHooks": [Function],
                                  "isFieldTouched": [Function],
                                  "isFieldValidating": [Function],
                                  "isFieldsTouched": [Function],
                                  "isFieldsValidating": [Function],
                                  "resetFields": [Function],
                                  "scrollToField": [Function],
                                  "setFields": [Function],
                                  "setFieldsValue": [Function],
                                  "submit": [Function],
                                  "validateFields": [Function],
                                },
                              }
                            }
                            isReadOnly={false}
                            item={
                              Object {
                                "api": Array [
                                  "name",
                                  "code",
                                  [Function],
                                ],
                                "name": "department",
                                "render": [Function],
                                "span": undefined,
                                "title": "部门",
                              }
                            }
                            key="form-group-item-department"
                            layout={
                              Object {
                                "labelCol": Object {
                                  "sm": Object {
                                    "span": 6,
                                  },
                                  "xs": Object {
                                    "span": 24,
                                  },
                                },
                                "wrapperCol": Object {
                                  "sm": Object {
                                    "span": 16,
                                  },
                                  "xs": Object {
                                    "span": 24,
                                  },
                                },
                              }
                            }
                            record={Object {}}
                            rules={Array []}
                          >
                            <Col
                              className="abstract-form-item-col  than-three"
                              span={24}
                            >
                              <div
                                className="ant-col ant-col-24 abstract-form-item-col  than-three"
                                style={
                                  Object {
                                    "paddingLeft": 12,
                                    "paddingRight": 12,
                                  }
                                }
                              >
                                <FormItem
                                  className="visible abstract-form-item abstract-input-department "
                                  extra={null}
                                  label="部门"
                                  labelCol={
                                    Object {
                                      "sm": Object {
                                        "span": 6,
                                      },
                                      "xs": Object {
                                        "span": 24,
                                      },
                                    }
                                  }
                                  name={
                                    Array [
                                      "department",
                                    ]
                                  }
                                  normalize={[Function]}
                                  rules={Array []}
                                  shouldUpdate={[Function]}
                                  wrapperCol={
                                    Object {
                                      "sm": Object {
                                        "span": 16,
                                      },
                                      "xs": Object {
                                        "span": 24,
                                      },
                                    }
                                  }
                                >
                                  <WrapperField
                                    className="visible abstract-form-item abstract-input-department "
                                    extra={null}
                                    label="部门"
                                    labelCol={
                                      Object {
                                        "sm": Object {
                                          "span": 6,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                    messageVariables={
                                      Object {
                                        "label": "部门",
                                      }
                                    }
                                    name={
                                      Array [
                                        "department",
                                      ]
                                    }
                                    normalize={[Function]}
                                    onReset={[Function]}
                                    rules={Array []}
                                    shouldUpdate={[Function]}
                                    trigger="onChange"
                                    validateTrigger="onChange"
                                    wrapperCol={
                                      Object {
                                        "sm": Object {
                                          "span": 16,
                                        },
                                        "xs": Object {
                                          "span": 24,
                                        },
                                      }
                                    }
                                  >
                                    <Field
                                      className="visible abstract-form-item abstract-input-department "
                                      extra={null}
                                      fieldContext={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": undefined,
                                          },
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                          "validateTrigger": "onChange",
                                        }
                                      }
                                      key="_department"
                                      label="部门"
                                      labelCol={
                                        Object {
                                          "sm": Object {
                                            "span": 6,
                                          },
                                          "xs": Object {
                                            "span": 24,
                                          },
                                        }
                                      }
                                      messageVariables={
                                        Object {
                                          "label": "部门",
                                        }
                                      }
                                      name={
                                        Array [
                                          "department",
                                        ]
                                      }
                                      normalize={[Function]}
                                      onReset={[Function]}
                                      rules={Array []}
                                      shouldUpdate={[Function]}
                                      trigger="onChange"
                                      validateTrigger="onChange"
                                      valuePropName="value"
                                      wrapperCol={
                                        Object {
                                          "sm": Object {
                                            "span": 16,
                                          },
                                          "xs": Object {
                                            "span": 24,
                                          },
                                        }
                                      }
                                    >
                                      <Row
                                        className="ant-form-item visible abstract-form-item abstract-input-department "
                                        key="row"
                                      >
                                        <div
                                          className="ant-row ant-form-item visible abstract-form-item abstract-input-department "
                                          style={Object {}}
                                        >
                                          <FormItemLabel
                                            className="visible abstract-form-item abstract-input-department "
                                            extra={null}
                                            htmlFor="department"
                                            label="部门"
                                            labelCol={
                                              Object {
                                                "sm": Object {
                                                  "span": 6,
                                                },
                                                "xs": Object {
                                                  "span": 24,
                                                },
                                              }
                                            }
                                            name={
                                              Array [
                                                "department",
                                              ]
                                            }
                                            normalize={[Function]}
                                            prefixCls="ant-form"
                                            required={false}
                                            requiredMark={true}
                                            rules={Array []}
                                            shouldUpdate={[Function]}
                                            wrapperCol={
                                              Object {
                                                "sm": Object {
                                                  "span": 16,
                                                },
                                                "xs": Object {
                                                  "span": 24,
                                                },
                                              }
                                            }
                                          >
                                            <Col
                                              className="ant-form-item-label"
                                              sm={
                                                Object {
                                                  "span": 6,
                                                }
                                              }
                                              xs={
                                                Object {
                                                  "span": 24,
                                                }
                                              }
                                            >
                                              <div
                                                className="ant-col ant-form-item-label ant-col-xs-24 ant-col-sm-6"
                                                style={Object {}}
                                              >
                                                <label
                                                  className=""
                                                  htmlFor="department"
                                                  title="部门"
                                                >
                                                  部门
                                                </label>
                                              </div>
                                            </Col>
                                          </FormItemLabel>
                                          <FormItemInput
                                            className="visible abstract-form-item abstract-input-department "
                                            errors={Array []}
                                            extra={null}
                                            label="部门"
                                            labelCol={
                                              Object {
                                                "sm": Object {
                                                  "span": 6,
                                                },
                                                "xs": Object {
                                                  "span": 24,
                                                },
                                              }
                                            }
                                            name={
                                              Array [
                                                "department",
                                              ]
                                            }
                                            normalize={[Function]}
                                            onDomErrorVisibleChange={[Function]}
                                            prefixCls="ant-form"
                                            rules={Array []}
                                            shouldUpdate={[Function]}
                                            status=""
                                            touched={false}
                                            validateStatus=""
                                            validating={false}
                                            wrapperCol={
                                              Object {
                                                "sm": Object {
                                                  "span": 16,
                                                },
                                                "xs": Object {
                                                  "span": 24,
                                                },
                                              }
                                            }
                                          >
                                            <Col
                                              className="ant-form-item-control"
                                              sm={
                                                Object {
                                                  "span": 16,
                                                }
                                              }
                                              xs={
                                                Object {
                                                  "span": 24,
                                                }
                                              }
                                            >
                                              <div
                                                className="ant-col ant-form-item-control ant-col-xs-24 ant-col-sm-16"
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-form-item-control-input"
                                                >
                                                  <div
                                                    className="ant-form-item-control-input-content"
                                                  >
                                                    <Component
                                                      update={2}
                                                    >
                                                      <InputWrap
                                                        form={
                                                          Object {
                                                            "current": Object {
                                                              "__INTERNAL__": Object {
                                                                "itemRef": [Function],
                                                                "name": undefined,
                                                              },
                                                              "getFieldError": [Function],
                                                              "getFieldInstance": [Function],
                                                              "getFieldValue": [Function],
                                                              "getFieldsError": [Function],
                                                              "getFieldsValue": [Function],
                                                              "getInternalHooks": [Function],
                                                              "isFieldTouched": [Function],
                                                              "isFieldValidating": [Function],
                                                              "isFieldsTouched": [Function],
                                                              "isFieldsValidating": [Function],
                                                              "resetFields": [Function],
                                                              "scrollToField": [Function],
                                                              "setFields": [Function],
                                                              "setFieldsValue": [Function],
                                                              "submit": [Function],
                                                              "validateFields": [Function],
                                                            },
                                                          }
                                                        }
                                                        id="department"
                                                        isReadOnly={false}
                                                        item={
                                                          Object {
                                                            "api": Array [
                                                              "name",
                                                              "code",
                                                              [Function],
                                                            ],
                                                            "name": "department",
                                                            "render": [Function],
                                                            "span": undefined,
                                                            "title": "部门",
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        record={Object {}}
                                                        valueFormatter={[Function]}
                                                      >
                                                        <div
                                                          id="department"
                                                        >
                                                          <AdvancePicker
                                                            allOption={true}
                                                            allowClear={true}
                                                            api={[Function]}
                                                            data={null}
                                                            disabled={false}
                                                            format={[Function]}
                                                            labelName="name"
                                                            onChange={[Function]}
                                                            query={Object {}}
                                                            type="remote"
                                                            valueName="code"
                                                          >
                                                            <ForwardRef(InternalSelect)
                                                              allowClear={true}
                                                              className="undefined advance-picker"
                                                              data={null}
                                                              disabled={false}
                                                              filterOption={[Function]}
                                                              notFoundContent="无匹配数据"
                                                              onChange={[Function]}
                                                              onPopupScroll={[Function]}
                                                              onSearch={[Function]}
                                                              optionLabelProp="children"
                                                              query={Object {}}
                                                              showSearch={true}
                                                            >
                                                              <Select
                                                                allowClear={true}
                                                                className="undefined advance-picker"
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                data={null}
                                                                disabled={false}
                                                                dropdownClassName=""
                                                                filterOption={[Function]}
                                                                inputIcon={[Function]}
                                                                listHeight={256}
                                                                listItemHeight={24}
                                                                menuItemSelectedIcon={null}
                                                                notFoundContent="无匹配数据"
                                                                onChange={[Function]}
                                                                onPopupScroll={[Function]}
                                                                onSearch={[Function]}
                                                                optionLabelProp="children"
                                                                prefixCls="ant-select"
                                                                query={Object {}}
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                showSearch={true}
                                                                transitionName="ant-slide-up"
                                                              >
                                                                <ForwardRef(Select)
                                                                  allowClear={true}
                                                                  className="undefined advance-picker"
                                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                  data={null}
                                                                  disabled={false}
                                                                  dropdownClassName=""
                                                                  filterOption={[Function]}
                                                                  inputIcon={[Function]}
                                                                  listHeight={256}
                                                                  listItemHeight={24}
                                                                  menuItemSelectedIcon={null}
                                                                  notFoundContent="无匹配数据"
                                                                  onChange={[Function]}
                                                                  onPopupScroll={[Function]}
                                                                  onSearch={[Function]}
                                                                  optionLabelProp="children"
                                                                  prefixCls="ant-select"
                                                                  query={Object {}}
                                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                                  showSearch={true}
                                                                  transitionName="ant-slide-up"
                                                                >
                                                                  <div
                                                                    className="ant-select undefined advance-picker ant-select-single ant-select-allow-clear ant-select-show-arrow ant-select-show-search"
                                                                    data={null}
                                                                    onBlur={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    query={Object {}}
                                                                  >
                                                                    <SelectTrigger
                                                                      containerWidth={null}
                                                                      disabled={false}
                                                                      dropdownClassName=""
                                                                      empty={false}
                                                                      getTriggerDOMNode={[Function]}
                                                                      popupElement={
                                                                        <ForwardRef(OptionList)
                                                                          childrenAsData={true}
                                                                          defaultActiveFirstOption={true}
                                                                          flattenOptions={
                                                                            Array [
                                                                              Object {
                                                                                "data": Object {
                                                                                  "children": "全部",
                                                                                  "key": "_0",
                                                                                  "value": "",
                                                                                },
                                                                                "groupOption": false,
                                                                                "key": "_0",
                                                                              },
                                                                            ]
                                                                          }
                                                                          height={256}
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          itemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent="无匹配数据"
                                                                          onActiveValue={[Function]}
                                                                          onMouseEnter={[Function]}
                                                                          onScroll={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          options={
                                                                            Array [
                                                                              Object {
                                                                                "children": "全部",
                                                                                "key": "_0",
                                                                                "value": "",
                                                                              },
                                                                            ]
                                                                          }
                                                                          prefixCls="ant-select"
                                                                          searchValue=""
                                                                          values={Set {}}
                                                                          virtual={true}
                                                                        />
                                                                      }
                                                                      prefixCls="ant-select"
                                                                      transitionName="ant-slide-up"
                                                                    >
                                                                      <Trigger
                                                                        action={Array []}
                                                                        afterPopupVisibleChange={[Function]}
                                                                        autoDestroy={false}
                                                                        blurDelay={0.15}
                                                                        builtinPlacements={
                                                                          Object {
                                                                            "bottomLeft": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "tl",
                                                                                "bl",
                                                                              ],
                                                                            },
                                                                            "bottomRight": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "tr",
                                                                                "br",
                                                                              ],
                                                                            },
                                                                            "topLeft": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                -4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "bl",
                                                                                "tl",
                                                                              ],
                                                                            },
                                                                            "topRight": Object {
                                                                              "offset": Array [
                                                                                0,
                                                                                -4,
                                                                              ],
                                                                              "overflow": Object {
                                                                                "adjustX": 0,
                                                                                "adjustY": 1,
                                                                              },
                                                                              "points": Array [
                                                                                "br",
                                                                                "tr",
                                                                              ],
                                                                            },
                                                                          }
                                                                        }
                                                                        defaultPopupVisible={false}
                                                                        destroyPopupOnHide={false}
                                                                        focusDelay={0}
                                                                        getDocument={[Function]}
                                                                        getPopupClassNameFromAlign={[Function]}
                                                                        getTriggerDOMNode={[Function]}
                                                                        hideAction={Array []}
                                                                        mask={false}
                                                                        maskClosable={true}
                                                                        mouseEnterDelay={0}
                                                                        mouseLeaveDelay={0.1}
                                                                        onPopupAlign={[Function]}
                                                                        onPopupVisibleChange={[Function]}
                                                                        popup={
                                                                          <div>
                                                                            <ForwardRef(OptionList)
                                                                              childrenAsData={true}
                                                                              defaultActiveFirstOption={true}
                                                                              flattenOptions={
                                                                                Array [
                                                                                  Object {
                                                                                    "data": Object {
                                                                                      "children": "全部",
                                                                                      "key": "_0",
                                                                                      "value": "",
                                                                                    },
                                                                                    "groupOption": false,
                                                                                    "key": "_0",
                                                                                  },
                                                                                ]
                                                                              }
                                                                              height={256}
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              itemHeight={24}
                                                                              menuItemSelectedIcon={null}
                                                                              multiple={false}
                                                                              notFoundContent="无匹配数据"
                                                                              onActiveValue={[Function]}
                                                                              onMouseEnter={[Function]}
                                                                              onScroll={[Function]}
                                                                              onSelect={[Function]}
                                                                              onToggleOpen={[Function]}
                                                                              options={
                                                                                Array [
                                                                                  Object {
                                                                                    "children": "全部",
                                                                                    "key": "_0",
                                                                                    "value": "",
                                                                                  },
                                                                                ]
                                                                              }
                                                                              prefixCls="ant-select"
                                                                              searchValue=""
                                                                              values={Set {}}
                                                                              virtual={true}
                                                                            />
                                                                          </div>
                                                                        }
                                                                        popupAlign={Object {}}
                                                                        popupClassName=""
                                                                        popupPlacement="bottomLeft"
                                                                        popupStyle={
                                                                          Object {
                                                                            "minWidth": null,
                                                                            "width": null,
                                                                          }
                                                                        }
                                                                        popupTransitionName="ant-slide-up"
                                                                        prefixCls="ant-select-dropdown"
                                                                        showAction={Array []}
                                                                      >
                                                                        <Selector
                                                                          accessibilityIndex={0}
                                                                          activeValue={null}
                                                                          allowClear={true}
                                                                          className="undefined advance-picker"
                                                                          clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                          data={null}
                                                                          disabled={false}
                                                                          domRef={
                                                                            Object {
                                                                              "current": <div
                                                                                class="ant-select-selector"
                                                                              >
                                                                                <span
                                                                                  class="ant-select-selection-search"
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    role="combobox"
                                                                                    type="search"
                                                                                    value=""
                                                                                  />
                                                                                </span>
                                                                                <span
                                                                                  class="ant-select-selection-placeholder"
                                                                                />
                                                                              </div>,
                                                                            }
                                                                          }
                                                                          dropdownClassName=""
                                                                          filterOption={[Function]}
                                                                          id="rc_select_TEST_OR_SSR"
                                                                          inputElement={null}
                                                                          inputIcon={[Function]}
                                                                          key="trigger"
                                                                          listHeight={256}
                                                                          listItemHeight={24}
                                                                          menuItemSelectedIcon={null}
                                                                          multiple={false}
                                                                          notFoundContent="无匹配数据"
                                                                          onChange={[Function]}
                                                                          onPopupScroll={[Function]}
                                                                          onSearch={[Function]}
                                                                          onSearchSubmit={[Function]}
                                                                          onSelect={[Function]}
                                                                          onToggleOpen={[Function]}
                                                                          optionLabelProp="children"
                                                                          prefixCls="ant-select"
                                                                          query={Object {}}
                                                                          removeIcon={<ForwardRef(CloseOutlined) />}
                                                                          searchValue=""
                                                                          showSearch={true}
                                                                          tokenWithEnter={false}
                                                                          transitionName="ant-slide-up"
                                                                          values={Array []}
                                                                        >
                                                                          <div
                                                                            className="ant-select-selector"
                                                                            onClick={[Function]}
                                                                            onMouseDown={[Function]}
                                                                          >
                                                                            <SingleSelector
                                                                              accessibilityIndex={0}
                                                                              activeValue={null}
                                                                              allowClear={true}
                                                                              className="undefined advance-picker"
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              data={null}
                                                                              disabled={false}
                                                                              domRef={
                                                                                Object {
                                                                                  "current": <div
                                                                                    class="ant-select-selector"
                                                                                  >
                                                                                    <span
                                                                                      class="ant-select-selection-search"
                                                                                    >
                                                                                      <input
                                                                                        aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                        aria-autocomplete="list"
                                                                                        aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                        aria-haspopup="listbox"
                                                                                        aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                        autocomplete="off"
                                                                                        class="ant-select-selection-search-input"
                                                                                        id="rc_select_TEST_OR_SSR"
                                                                                        role="combobox"
                                                                                        type="search"
                                                                                        value=""
                                                                                      />
                                                                                    </span>
                                                                                    <span
                                                                                      class="ant-select-selection-placeholder"
                                                                                    />
                                                                                  </div>,
                                                                                }
                                                                              }
                                                                              dropdownClassName=""
                                                                              filterOption={[Function]}
                                                                              id="rc_select_TEST_OR_SSR"
                                                                              inputElement={null}
                                                                              inputIcon={[Function]}
                                                                              inputRef={
                                                                                Object {
                                                                                  "current": <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autocomplete="off"
                                                                                    class="ant-select-selection-search-input"
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    role="combobox"
                                                                                    type="search"
                                                                                    value=""
                                                                                  />,
                                                                                }
                                                                              }
                                                                              listHeight={256}
                                                                              listItemHeight={24}
                                                                              menuItemSelectedIcon={null}
                                                                              multiple={false}
                                                                              notFoundContent="无匹配数据"
                                                                              onChange={[Function]}
                                                                              onInputChange={[Function]}
                                                                              onInputCompositionEnd={[Function]}
                                                                              onInputCompositionStart={[Function]}
                                                                              onInputKeyDown={[Function]}
                                                                              onInputMouseDown={[Function]}
                                                                              onInputPaste={[Function]}
                                                                              onPopupScroll={[Function]}
                                                                              onSearch={[Function]}
                                                                              onSearchSubmit={[Function]}
                                                                              onSelect={[Function]}
                                                                              onToggleOpen={[Function]}
                                                                              optionLabelProp="children"
                                                                              prefixCls="ant-select"
                                                                              query={Object {}}
                                                                              removeIcon={<ForwardRef(CloseOutlined) />}
                                                                              searchValue=""
                                                                              showSearch={true}
                                                                              tokenWithEnter={false}
                                                                              transitionName="ant-slide-up"
                                                                              values={Array []}
                                                                            >
                                                                              <span
                                                                                className="ant-select-selection-search"
                                                                              >
                                                                                <Input
                                                                                  accessibilityIndex={0}
                                                                                  attrs={Object {}}
                                                                                  disabled={false}
                                                                                  editable={true}
                                                                                  id="rc_select_TEST_OR_SSR"
                                                                                  inputElement={null}
                                                                                  onChange={[Function]}
                                                                                  onCompositionEnd={[Function]}
                                                                                  onCompositionStart={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  onMouseDown={[Function]}
                                                                                  onPaste={[Function]}
                                                                                  prefixCls="ant-select"
                                                                                  value=""
                                                                                >
                                                                                  <input
                                                                                    aria-activedescendant="rc_select_TEST_OR_SSR_list_0"
                                                                                    aria-autocomplete="list"
                                                                                    aria-controls="rc_select_TEST_OR_SSR_list"
                                                                                    aria-haspopup="listbox"
                                                                                    aria-owns="rc_select_TEST_OR_SSR_list"
                                                                                    autoComplete="off"
                                                                                    className="ant-select-selection-search-input"
                                                                                    disabled={false}
                                                                                    id="rc_select_TEST_OR_SSR"
                                                                                    onChange={[Function]}
                                                                                    onCompositionEnd={[Function]}
                                                                                    onCompositionStart={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onPaste={[Function]}
                                                                                    readOnly={false}
                                                                                    role="combobox"
                                                                                    style={
                                                                                      Object {
                                                                                        "opacity": null,
                                                                                      }
                                                                                    }
                                                                                    type="search"
                                                                                    unselectable={null}
                                                                                    value=""
                                                                                  />
                                                                                </Input>
                                                                              </span>
                                                                              <span
                                                                                className="ant-select-selection-placeholder"
                                                                              />
                                                                            </SingleSelector>
                                                                          </div>
                                                                        </Selector>
                                                                      </Trigger>
                                                                    </SelectTrigger>
                                                                    <TransBtn
                                                                      className="ant-select-arrow"
                                                                      customizeIcon={[Function]}
                                                                      customizeIconProps={
                                                                        Object {
                                                                          "focused": false,
                                                                          "loading": undefined,
                                                                          "open": undefined,
                                                                          "searchValue": "",
                                                                          "showSearch": true,
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        aria-hidden={true}
                                                                        className="ant-select-arrow"
                                                                        onMouseDown={[Function]}
                                                                        style={
                                                                          Object {
                                                                            "WebkitUserSelect": "none",
                                                                            "userSelect": "none",
                                                                          }
                                                                        }
                                                                        unselectable="on"
                                                                      >
                                                                        <ForwardRef(DownOutlined)
                                                                          className="ant-select-suffix"
                                                                        >
                                                                          <AntdIcon
                                                                            className="ant-select-suffix"
                                                                            icon={
                                                                              Object {
                                                                                "icon": Object {
                                                                                  "attrs": Object {
                                                                                    "focusable": "false",
                                                                                    "viewBox": "64 64 896 896",
                                                                                  },
                                                                                  "children": Array [
                                                                                    Object {
                                                                                      "attrs": Object {
                                                                                        "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                      },
                                                                                      "tag": "path",
                                                                                    },
                                                                                  ],
                                                                                  "tag": "svg",
                                                                                },
                                                                                "name": "down",
                                                                                "theme": "outlined",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              aria-label="down"
                                                                              className="anticon anticon-down ant-select-suffix"
                                                                              role="img"
                                                                            >
                                                                              <IconReact
                                                                                icon={
                                                                                  Object {
                                                                                    "icon": Object {
                                                                                      "attrs": Object {
                                                                                        "focusable": "false",
                                                                                        "viewBox": "64 64 896 896",
                                                                                      },
                                                                                      "children": Array [
                                                                                        Object {
                                                                                          "attrs": Object {
                                                                                            "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z",
                                                                                          },
                                                                                          "tag": "path",
                                                                                        },
                                                                                      ],
                                                                                      "tag": "svg",
                                                                                    },
                                                                                    "name": "down",
                                                                                    "theme": "outlined",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  data-icon="down"
                                                                                  fill="currentColor"
                                                                                  focusable="false"
                                                                                  height="1em"
                                                                                  key="svg-down"
                                                                                  viewBox="64 64 896 896"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                                                                                    key="svg-down-svg-0"
                                                                                  />
                                                                                </svg>
                                                                              </IconReact>
                                                                            </span>
                                                                          </AntdIcon>
                                                                        </ForwardRef(DownOutlined)>
                                                                      </span>
                                                                    </TransBtn>
                                                                  </div>
                                                                </ForwardRef(Select)>
                                                              </Select>
                                                            </ForwardRef(InternalSelect)>
                                                          </AdvancePicker>
                                                        </div>
                                                      </InputWrap>
                                                    </Component>
                                                  </div>
                                                </div>
                                                <ErrorList
                                                  errors={Array []}
                                                  onDomErrorVisibleChange={[Function]}
                                                >
                                                  <CSSMotion
                                                    motionAppear={true}
                                                    motionDeadline={500}
                                                    motionName="ant-show-help"
                                                    onLeaveEnd={[Function]}
                                                    removeOnLeave={true}
                                                    visible={false}
                                                  >
                                                    <DomWrapper />
                                                  </CSSMotion>
                                                </ErrorList>
                                              </div>
                                            </Col>
                                          </FormItemInput>
                                        </div>
                                      </Row>
                                    </Field>
                                  </WrapperField>
                                </FormItem>
                              </div>
                            </Col>
                          </Item>
                        </Dynamic>
                      </AbstractForm>
                      <Col
                        className="search-buttons abstract-search-item"
                        key="table-search-buttons"
                        span={NaN}
                      >
                        <div
                          className="ant-col ant-col-NaN search-buttons abstract-search-item"
                          style={
                            Object {
                              "paddingLeft": 12,
                              "paddingRight": 12,
                            }
                          }
                        >
                          <FormItem>
                            <Row
                              className="ant-form-item"
                              key="row"
                            >
                              <div
                                className="ant-row ant-form-item"
                                style={Object {}}
                              >
                                <FormItemLabel
                                  prefixCls="ant-form"
                                  requiredMark={true}
                                />
                                <FormItemInput
                                  errors={Array []}
                                  onDomErrorVisibleChange={[Function]}
                                  prefixCls="ant-form"
                                  status=""
                                  validateStatus=""
                                >
                                  <Col
                                    className="ant-form-item-control"
                                  >
                                    <div
                                      className="ant-col ant-form-item-control"
                                      style={Object {}}
                                    >
                                      <div
                                        className="ant-form-item-control-input"
                                      >
                                        <div
                                          className="ant-form-item-control-input-content"
                                        >
                                          <Button
                                            htmlType="submit"
                                            icon={<ForwardRef(SearchOutlined) />}
                                            type="primary"
                                          >
                                            <Wave>
                                              <button
                                                className="ant-btn ant-btn-primary"
                                                onClick={[Function]}
                                                type="submit"
                                              >
                                                <ForwardRef(SearchOutlined)>
                                                  <AntdIcon
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "search",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="search"
                                                      className="anticon anticon-search"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "search",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="search"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-search"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z"
                                                            key="svg-search-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(SearchOutlined)>
                                                <span
                                                  key=".0"
                                                >
                                                  查询
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                          <Button
                                            icon={<ForwardRef(DeleteOutlined) />}
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "marginLeft": 8,
                                              }
                                            }
                                          >
                                            <Wave>
                                              <button
                                                className="ant-btn"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "marginLeft": 8,
                                                  }
                                                }
                                                type="button"
                                              >
                                                <ForwardRef(DeleteOutlined)>
                                                  <AntdIcon
                                                    icon={
                                                      Object {
                                                        "icon": Object {
                                                          "attrs": Object {
                                                            "focusable": "false",
                                                            "viewBox": "64 64 896 896",
                                                          },
                                                          "children": Array [
                                                            Object {
                                                              "attrs": Object {
                                                                "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                              },
                                                              "tag": "path",
                                                            },
                                                          ],
                                                          "tag": "svg",
                                                        },
                                                        "name": "delete",
                                                        "theme": "outlined",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      aria-label="delete"
                                                      className="anticon anticon-delete"
                                                      role="img"
                                                    >
                                                      <IconReact
                                                        icon={
                                                          Object {
                                                            "icon": Object {
                                                              "attrs": Object {
                                                                "focusable": "false",
                                                                "viewBox": "64 64 896 896",
                                                              },
                                                              "children": Array [
                                                                Object {
                                                                  "attrs": Object {
                                                                    "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z",
                                                                  },
                                                                  "tag": "path",
                                                                },
                                                              ],
                                                              "tag": "svg",
                                                            },
                                                            "name": "delete",
                                                            "theme": "outlined",
                                                          }
                                                        }
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          data-icon="delete"
                                                          fill="currentColor"
                                                          focusable="false"
                                                          height="1em"
                                                          key="svg-delete"
                                                          viewBox="64 64 896 896"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z"
                                                            key="svg-delete-svg-0"
                                                          />
                                                        </svg>
                                                      </IconReact>
                                                    </span>
                                                  </AntdIcon>
                                                </ForwardRef(DeleteOutlined)>
                                                <span
                                                  key=".0"
                                                >
                                                  清空
                                                </span>
                                              </button>
                                            </Wave>
                                          </Button>
                                        </div>
                                      </div>
                                      <ErrorList
                                        errors={Array []}
                                        onDomErrorVisibleChange={[Function]}
                                      >
                                        <CSSMotion
                                          motionAppear={true}
                                          motionDeadline={500}
                                          motionName="ant-show-help"
                                          onLeaveEnd={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </ErrorList>
                                    </div>
                                  </Col>
                                </FormItemInput>
                              </div>
                            </Row>
                          </FormItem>
                        </div>
                      </Col>
                    </div>
                  </Row>
                  <TopActions
                    buttons={
                      Array [
                        Object {
                          "click": [Function],
                          "icon": <ForwardRef(PlusOutlined) />,
                          "name": "新增",
                        },
                        Object {
                          "action": "up",
                          "name": "单个上架",
                          "select": "single",
                        },
                        Object {
                          "click": [Function],
                          "name": "批量上架",
                          "select": "multiple",
                        },
                        Object {
                          "click": [Function],
                          "confirm": "您确定批量下架选择的项?",
                          "enable": [Function],
                          "name": "批量下架",
                          "select": "multiple",
                        },
                      ]
                    }
                    onAction={[Function]}
                    renderTopBar={[Function]}
                    selectedRows={Array []}
                  >
                    <Row
                      className="search-tool-bar"
                    >
                      <div
                        className="ant-row search-tool-bar"
                        style={Object {}}
                      >
                        <Col
                          span={24}
                          style={
                            Object {
                              "textAlign": "right",
                            }
                          }
                        >
                          <div
                            className="ant-col ant-col-24"
                            style={
                              Object {
                                "textAlign": "right",
                              }
                            }
                          >
                            <div
                              className="table-operators"
                            >
                              <Button
                                className="operator"
                                disabled={false}
                                icon={<ForwardRef(PlusOutlined) />}
                                key="table-button-operat-0"
                                onClick={[Function]}
                                type="primary"
                              >
                                <Wave>
                                  <button
                                    className="ant-btn ant-btn-primary operator"
                                    disabled={false}
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <ForwardRef(PlusOutlined)>
                                      <AntdIcon
                                        icon={
                                          Object {
                                            "icon": Object {
                                              "attrs": Object {
                                                "focusable": "false",
                                                "viewBox": "64 64 896 896",
                                              },
                                              "children": Array [
                                                Object {
                                                  "attrs": Object {},
                                                  "children": Array [
                                                    Object {
                                                      "attrs": Object {},
                                                      "tag": "style",
                                                    },
                                                  ],
                                                  "tag": "defs",
                                                },
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                                  },
                                                  "tag": "path",
                                                },
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                                  },
                                                  "tag": "path",
                                                },
                                              ],
                                              "tag": "svg",
                                            },
                                            "name": "plus",
                                            "theme": "outlined",
                                          }
                                        }
                                      >
                                        <span
                                          aria-label="plus"
                                          className="anticon anticon-plus"
                                          role="img"
                                        >
                                          <IconReact
                                            icon={
                                              Object {
                                                "icon": Object {
                                                  "attrs": Object {
                                                    "focusable": "false",
                                                    "viewBox": "64 64 896 896",
                                                  },
                                                  "children": Array [
                                                    Object {
                                                      "attrs": Object {},
                                                      "children": Array [
                                                        Object {
                                                          "attrs": Object {},
                                                          "tag": "style",
                                                        },
                                                      ],
                                                      "tag": "defs",
                                                    },
                                                    Object {
                                                      "attrs": Object {
                                                        "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z",
                                                      },
                                                      "tag": "path",
                                                    },
                                                    Object {
                                                      "attrs": Object {
                                                        "d": "M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z",
                                                      },
                                                      "tag": "path",
                                                    },
                                                  ],
                                                  "tag": "svg",
                                                },
                                                "name": "plus",
                                                "theme": "outlined",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              data-icon="plus"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              key="svg-plus"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <defs
                                                key="svg-plus-svg-0"
                                              >
                                                <style
                                                  key="svg-plus-svg-0-defs-0"
                                                />
                                              </defs>
                                              <path
                                                d="M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z"
                                                key="svg-plus-svg-1"
                                              />
                                              <path
                                                d="M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z"
                                                key="svg-plus-svg-2"
                                              />
                                            </svg>
                                          </IconReact>
                                        </span>
                                      </AntdIcon>
                                    </ForwardRef(PlusOutlined)>
                                    <span
                                      key=".0"
                                    >
                                      新增
                                    </span>
                                  </button>
                                </Wave>
                              </Button>
                              <Button
                                className="operator"
                                disabled={true}
                                key="table-button-operat-1"
                                onClick={[Function]}
                                type="primary"
                              >
                                <Wave>
                                  <button
                                    className="ant-btn ant-btn-primary operator"
                                    disabled={true}
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <LoadingIcon
                                      existIcon={false}
                                      loading={false}
                                      prefixCls="ant-btn"
                                    >
                                      <CSSMotion
                                        motionName="ant-btn-loading-icon-motion"
                                        onAppearActive={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </LoadingIcon>
                                    <span
                                      key=".0"
                                    >
                                      单个上架
                                    </span>
                                  </button>
                                </Wave>
                              </Button>
                              <Button
                                className="operator"
                                disabled={true}
                                key="table-button-operat-2"
                                onClick={[Function]}
                                type="primary"
                              >
                                <Wave>
                                  <button
                                    className="ant-btn ant-btn-primary operator"
                                    disabled={true}
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <LoadingIcon
                                      existIcon={false}
                                      loading={false}
                                      prefixCls="ant-btn"
                                    >
                                      <CSSMotion
                                        motionName="ant-btn-loading-icon-motion"
                                        onAppearActive={[Function]}
                                        onAppearStart={[Function]}
                                        onEnterActive={[Function]}
                                        onEnterStart={[Function]}
                                        onLeaveActive={[Function]}
                                        onLeaveStart={[Function]}
                                        removeOnLeave={true}
                                        visible={false}
                                      >
                                        <DomWrapper />
                                      </CSSMotion>
                                    </LoadingIcon>
                                    <span
                                      key=".0"
                                    >
                                      批量上架
                                    </span>
                                  </button>
                                </Wave>
                              </Button>
                              <ForwardRef
                                cancelText="取消"
                                disabled={true}
                                icon={<ForwardRef(ExclamationCircleFilled) />}
                                key="table-operat-3"
                                okText="确定"
                                okType="primary"
                                onConfirm={[Function]}
                                placement="top"
                                title="您确定批量下架选择的项?"
                                trigger="click"
                              >
                                <Tooltip
                                  arrowPointAtCenter={false}
                                  autoAdjustOverflow={true}
                                  cancelText="取消"
                                  disabled={true}
                                  icon={<ForwardRef(ExclamationCircleFilled) />}
                                  mouseEnterDelay={0.1}
                                  mouseLeaveDelay={0.1}
                                  okText="确定"
                                  okType="primary"
                                  onConfirm={[Function]}
                                  onVisibleChange={[Function]}
                                  overlay={
                                    <LocaleReceiver
                                      componentName="Popconfirm"
                                      defaultLocale={
                                        Object {
                                          "cancelText": "Cancel",
                                          "okText": "OK",
                                        }
                                      }
                                    >
                                      [Function]
                                    </LocaleReceiver>
                                  }
                                  overlayClassName="ant-popconfirm"
                                  placement="top"
                                  prefixCls="ant-popover"
                                  title="您确定批量下架选择的项?"
                                  transitionName="ant-zoom-big"
                                  trigger="click"
                                  visible={false}
                                >
                                  <ForwardRef(Tooltip)
                                    arrowContent={
                                      <span
                                        className="ant-popover-arrow-content"
                                      />
                                    }
                                    arrowPointAtCenter={false}
                                    autoAdjustOverflow={true}
                                    builtinPlacements={
                                      Object {
                                        "bottom": Object {
                                          "ignoreShake": true,
                                          "offset": Array [
                                            0,
                                            4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 1,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "tc",
                                            "bc",
                                          ],
                                          "targetOffset": Array [
                                            0,
                                            0,
                                          ],
                                        },
                                        "bottomLeft": Object {
                                          "ignoreShake": true,
                                          "offset": Array [
                                            0,
                                            4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 1,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "tl",
                                            "bl",
                                          ],
                                          "targetOffset": Array [
                                            0,
                                            0,
                                          ],
                                        },
                                        "bottomRight": Object {
                                          "ignoreShake": true,
                                          "offset": Array [
                                            0,
                                            4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 1,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "tr",
                                            "br",
                                          ],
                                          "targetOffset": Array [
                                            0,
                                            0,
                                          ],
                                        },
                                        "left": Object {
                                          "ignoreShake": true,
                                          "offset": Array [
                                            -4,
                                            0,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 1,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "cr",
                                            "cl",
                                          ],
                                          "targetOffset": Array [
                                            0,
                                            0,
                                          ],
                                        },
                                        "leftBottom": Object {
                                          "ignoreShake": true,
                                          "offset": Array [
                                            -4,
                                            0,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 1,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "br",
                                            "bl",
                                          ],
                                          "targetOffset": Array [
                                            0,
                                            0,
                                          ],
                                        },
                                        "leftTop": Object {
                                          "ignoreShake": true,
                                          "offset": Array [
                                            -4,
                                            0,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 1,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "tr",
                                            "tl",
                                          ],
                                          "targetOffset": Array [
                                            0,
                                            0,
                                          ],
                                        },
                                        "right": Object {
                                          "ignoreShake": true,
                                          "offset": Array [
                                            4,
                                            0,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 1,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "cl",
                                            "cr",
                                          ],
                                          "targetOffset": Array [
                                            0,
                                            0,
                                          ],
                                        },
                                        "rightBottom": Object {
                                          "ignoreShake": true,
                                          "offset": Array [
                                            4,
                                            0,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 1,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "bl",
                                            "br",
                                          ],
                                          "targetOffset": Array [
                                            0,
                                            0,
                                          ],
                                        },
                                        "rightTop": Object {
                                          "ignoreShake": true,
                                          "offset": Array [
                                            4,
                                            0,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 1,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "tl",
                                            "tr",
                                          ],
                                          "targetOffset": Array [
                                            0,
                                            0,
                                          ],
                                        },
                                        "top": Object {
                                          "ignoreShake": true,
                                          "offset": Array [
                                            0,
                                            -4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 1,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "bc",
                                            "tc",
                                          ],
                                          "targetOffset": Array [
                                            0,
                                            0,
                                          ],
                                        },
                                        "topLeft": Object {
                                          "ignoreShake": true,
                                          "offset": Array [
                                            0,
                                            -4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 1,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "bl",
                                            "tl",
                                          ],
                                          "targetOffset": Array [
                                            0,
                                            0,
                                          ],
                                        },
                                        "topRight": Object {
                                          "ignoreShake": true,
                                          "offset": Array [
                                            0,
                                            -4,
                                          ],
                                          "overflow": Object {
                                            "adjustX": 1,
                                            "adjustY": 1,
                                          },
                                          "points": Array [
                                            "br",
                                            "tr",
                                          ],
                                          "targetOffset": Array [
                                            0,
                                            0,
                                          ],
                                        },
                                      }
                                    }
                                    cancelText="取消"
                                    disabled={true}
                                    icon={<ForwardRef(ExclamationCircleFilled) />}
                                    motion={
                                      Object {
                                        "motionDeadline": 1000,
                                        "motionName": "ant-zoom-big",
                                      }
                                    }
                                    mouseEnterDelay={0.1}
                                    mouseLeaveDelay={0.1}
                                    okText="确定"
                                    okType="primary"
                                    onConfirm={[Function]}
                                    onPopupAlign={[Function]}
                                    onVisibleChange={[Function]}
                                    overlay={
                                      <LocaleReceiver
                                        componentName="Popconfirm"
                                        defaultLocale={
                                          Object {
                                            "cancelText": "Cancel",
                                            "okText": "OK",
                                          }
                                        }
                                      >
                                        [Function]
                                      </LocaleReceiver>
                                    }
                                    overlayClassName="ant-popconfirm"
                                    placement="top"
                                    prefixCls="ant-popover"
                                    title="您确定批量下架选择的项?"
                                    transitionName="ant-zoom-big"
                                    trigger="click"
                                    visible={false}
                                  >
                                    <Trigger
                                      action="click"
                                      afterPopupVisibleChange={[Function]}
                                      arrowContent={
                                        <span
                                          className="ant-popover-arrow-content"
                                        />
                                      }
                                      arrowPointAtCenter={false}
                                      autoAdjustOverflow={true}
                                      autoDestroy={false}
                                      blurDelay={0.15}
                                      builtinPlacements={
                                        Object {
                                          "bottom": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              0,
                                              4,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "tc",
                                              "bc",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "bottomLeft": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              0,
                                              4,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "tl",
                                              "bl",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "bottomRight": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              0,
                                              4,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "tr",
                                              "br",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "left": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              -4,
                                              0,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "cr",
                                              "cl",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "leftBottom": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              -4,
                                              0,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "br",
                                              "bl",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "leftTop": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              -4,
                                              0,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "tr",
                                              "tl",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "right": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              4,
                                              0,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "cl",
                                              "cr",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "rightBottom": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              4,
                                              0,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "bl",
                                              "br",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "rightTop": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              4,
                                              0,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "tl",
                                              "tr",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "top": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              0,
                                              -4,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "bc",
                                              "tc",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "topLeft": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              0,
                                              -4,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "bl",
                                              "tl",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                          "topRight": Object {
                                            "ignoreShake": true,
                                            "offset": Array [
                                              0,
                                              -4,
                                            ],
                                            "overflow": Object {
                                              "adjustX": 1,
                                              "adjustY": 1,
                                            },
                                            "points": Array [
                                              "br",
                                              "tr",
                                            ],
                                            "targetOffset": Array [
                                              0,
                                              0,
                                            ],
                                          },
                                        }
                                      }
                                      cancelText="取消"
                                      defaultPopupVisible={false}
                                      destroyPopupOnHide={false}
                                      disabled={true}
                                      focusDelay={0}
                                      getDocument={[Function]}
                                      getPopupClassNameFromAlign={[Function]}
                                      hideAction={Array []}
                                      icon={<ForwardRef(ExclamationCircleFilled) />}
                                      mask={false}
                                      maskClosable={true}
                                      mouseEnterDelay={0.1}
                                      mouseLeaveDelay={0.1}
                                      okText="确定"
                                      okType="primary"
                                      onConfirm={[Function]}
                                      onPopupAlign={[Function]}
                                      onPopupVisibleChange={[Function]}
                                      overlay={
                                        <LocaleReceiver
                                          componentName="Popconfirm"
                                          defaultLocale={
                                            Object {
                                              "cancelText": "Cancel",
                                              "okText": "OK",
                                            }
                                          }
                                        >
                                          [Function]
                                        </LocaleReceiver>
                                      }
                                      popup={[Function]}
                                      popupAlign={Object {}}
                                      popupClassName="ant-popconfirm"
                                      popupMotion={
                                        Object {
                                          "motionDeadline": 1000,
                                          "motionName": "ant-zoom-big",
                                        }
                                      }
                                      popupPlacement="top"
                                      popupStyle={Object {}}
                                      popupTransitionName="ant-zoom-big"
                                      popupVisible={false}
                                      prefixCls="ant-popover"
                                      showAction={Array []}
                                      title="您确定批量下架选择的项?"
                                      visible={false}
                                    >
                                      <span
                                        className="operator ant-popover-disabled-compatible-wrapper"
                                        key="trigger"
                                        onClick={[Function]}
                                        onMouseDown={[Function]}
                                        onTouchStart={[Function]}
                                        style={
                                          Object {
                                            "cursor": "not-allowed",
                                            "display": "inline-block",
                                            "width": null,
                                          }
                                        }
                                      >
                                        <Button
                                          className={null}
                                          disabled={true}
                                          key="table-button-operat-3"
                                          onClick={null}
                                          onKeyDown={[Function]}
                                          style={
                                            Object {
                                              "pointerEvents": "none",
                                            }
                                          }
                                          type="primary"
                                        >
                                          <Wave>
                                            <button
                                              className="ant-btn ant-btn-primary"
                                              disabled={true}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              style={
                                                Object {
                                                  "pointerEvents": "none",
                                                }
                                              }
                                              type="button"
                                            >
                                              <LoadingIcon
                                                existIcon={false}
                                                loading={false}
                                                prefixCls="ant-btn"
                                              >
                                                <CSSMotion
                                                  motionName="ant-btn-loading-icon-motion"
                                                  onAppearActive={[Function]}
                                                  onAppearStart={[Function]}
                                                  onEnterActive={[Function]}
                                                  onEnterStart={[Function]}
                                                  onLeaveActive={[Function]}
                                                  onLeaveStart={[Function]}
                                                  removeOnLeave={true}
                                                  visible={false}
                                                >
                                                  <DomWrapper />
                                                </CSSMotion>
                                              </LoadingIcon>
                                              <span
                                                key=".0"
                                              >
                                                批量下架
                                              </span>
                                            </button>
                                          </Wave>
                                        </Button>
                                      </span>
                                    </Trigger>
                                  </ForwardRef(Tooltip)>
                                </Tooltip>
                              </ForwardRef>
                            </div>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </TopActions>
                </form>
              </ForwardRef(Form)>
            </SizeContextProvider>
          </ForwardRef(InternalForm)>
        </div>
      </AbstractSearch>
      <div
        className="abstract-table abstract-flex"
      >
        <FilterTabs
          filters={null}
          loadFilters={[Function]}
          onChange={[Function]}
          value=""
        >
          <div
            className="tab-filters"
          >
            <Tabs
              defaultActiveKey=""
              onChange={[Function]}
              tabBarStyle={
                Object {
                  "margin": "0px",
                }
              }
            >
              <ForwardRef(Tabs)
                className=""
                defaultActiveKey=""
                moreIcon={<ForwardRef(EllipsisOutlined) />}
                moreTransitionName="ant-slide-up"
                onChange={[Function]}
                prefixCls="ant-tabs"
                tabBarStyle={
                  Object {
                    "margin": "0px",
                  }
                }
              >
                <div
                  className="ant-tabs ant-tabs-top"
                >
                  <ForwardRef(TabNavList)
                    activeKey=""
                    animated={
                      Object {
                        "inkBar": true,
                        "tabPane": false,
                      }
                    }
                    id="rc-tabs-test"
                    mobile={false}
                    moreIcon={<ForwardRef(EllipsisOutlined) />}
                    moreTransitionName="ant-slide-up"
                    onTabClick={[Function]}
                    panes={
                      Array [
                        <TabPane
                          style={
                            Object {
                              "height": 0,
                            }
                          }
                          tab="全部"
                        />,
                      ]
                    }
                    rtl={false}
                    style={
                      Object {
                        "margin": "0px",
                      }
                    }
                    tabPosition="top"
                  >
                    <div
                      className="ant-tabs-nav"
                      onKeyDown={[Function]}
                      role="tablist"
                      style={
                        Object {
                          "margin": "0px",
                        }
                      }
                    >
                      <ExtraContent
                        position="left"
                        prefixCls="ant-tabs"
                      />
                      <ResizeObserver
                        onResize={[Function]}
                      >
                        <div
                          className="ant-tabs-nav-wrap"
                        >
                          <ResizeObserver
                            onResize={[Function]}
                          >
                            <div
                              className="ant-tabs-nav-list"
                              style={
                                Object {
                                  "transform": "translate(0px, 0px)",
                                  "transition": undefined,
                                }
                              }
                            >
                              <ForwardRef(TabNode)
                                active={true}
                                id="rc-tabs-test"
                                key=""
                                onClick={[Function]}
                                onFocus={[Function]}
                                onRemove={[Function]}
                                prefixCls="ant-tabs"
                                rtl={false}
                                tab={
                                  Object {
                                    "key": "",
                                    "node": <TabPane
                                      style={
                                        Object {
                                          "height": 0,
                                        }
                                      }
                                      tab="全部"
                                    />,
                                    "style": Object {
                                      "height": 0,
                                    },
                                    "tab": "全部",
                                  }
                                }
                                tabPosition="top"
                              >
                                <div
                                  className="ant-tabs-tab ant-tabs-tab-active"
                                  key=""
                                  onClick={[Function]}
                                  style={
                                    Object {
                                      "marginLeft": undefined,
                                    }
                                  }
                                >
                                  <div
                                    aria-controls="rc-tabs-test-panel-"
                                    aria-selected={true}
                                    className="ant-tabs-tab-btn"
                                    id="rc-tabs-test-tab-"
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    role="tab"
                                    tabIndex={0}
                                  >
                                    全部
                                  </div>
                                </div>
                              </ForwardRef(TabNode)>
                              <ForwardRef(AddButton)
                                prefixCls="ant-tabs"
                                style={
                                  Object {
                                    "visibility": null,
                                  }
                                }
                              />
                              <div
                                className="ant-tabs-ink-bar ant-tabs-ink-bar-animated"
                              />
                            </div>
                          </ResizeObserver>
                        </div>
                      </ResizeObserver>
                      <ForwardRef(OperationNode)
                        activeKey=""
                        animated={
                          Object {
                            "inkBar": true,
                            "tabPane": false,
                          }
                        }
                        className="ant-tabs-nav-operations-hidden"
                        id="rc-tabs-test"
                        mobile={false}
                        moreIcon={<ForwardRef(EllipsisOutlined) />}
                        moreTransitionName="ant-slide-up"
                        onTabClick={[Function]}
                        panes={
                          Array [
                            <TabPane
                              style={
                                Object {
                                  "height": 0,
                                }
                              }
                              tab="全部"
                            />,
                          ]
                        }
                        prefixCls="ant-tabs"
                        rtl={false}
                        style={
                          Object {
                            "margin": "0px",
                          }
                        }
                        tabPosition="top"
                        tabs={Array []}
                      >
                        <div
                          className="ant-tabs-nav-operations ant-tabs-nav-operations-hidden"
                          style={
                            Object {
                              "margin": "0px",
                            }
                          }
                        >
                          <ForwardRef(Dropdown)
                            mouseEnterDelay={0.1}
                            mouseLeaveDelay={0.1}
                            onVisibleChange={[Function]}
                            overlay={
                              <Menu
                                aria-activedescendant={null}
                                aria-label="expanded dropdown"
                                id="rc-tabs-test-more-popup"
                                onClick={[Function]}
                                role="listbox"
                                selectedKeys={
                                  Array [
                                    null,
                                  ]
                                }
                                tabIndex={-1}
                              />
                            }
                            overlayClassName=""
                            prefixCls="ant-tabs-dropdown"
                            transitionName="ant-slide-up"
                            trigger={
                              Array [
                                "hover",
                              ]
                            }
                            visible={false}
                          >
                            <Trigger
                              action={
                                Array [
                                  "hover",
                                ]
                              }
                              afterPopupVisibleChange={[Function]}
                              autoDestroy={false}
                              blurDelay={0.15}
                              builtinPlacements={
                                Object {
                                  "bottomCenter": Object {
                                    "offset": Array [
                                      0,
                                      4,
                                    ],
                                    "overflow": Object {
                                      "adjustX": 1,
                                      "adjustY": 1,
                                    },
                                    "points": Array [
                                      "tc",
                                      "bc",
                                    ],
                                    "targetOffset": Array [
                                      0,
                                      0,
                                    ],
                                  },
                                  "bottomLeft": Object {
                                    "offset": Array [
                                      0,
                                      4,
                                    ],
                                    "overflow": Object {
                                      "adjustX": 1,
                                      "adjustY": 1,
                                    },
                                    "points": Array [
                                      "tl",
                                      "bl",
                                    ],
                                    "targetOffset": Array [
                                      0,
                                      0,
                                    ],
                                  },
                                  "bottomRight": Object {
                                    "offset": Array [
                                      0,
                                      4,
                                    ],
                                    "overflow": Object {
                                      "adjustX": 1,
                                      "adjustY": 1,
                                    },
                                    "points": Array [
                                      "tr",
                                      "br",
                                    ],
                                    "targetOffset": Array [
                                      0,
                                      0,
                                    ],
                                  },
                                  "topCenter": Object {
                                    "offset": Array [
                                      0,
                                      -4,
                                    ],
                                    "overflow": Object {
                                      "adjustX": 1,
                                      "adjustY": 1,
                                    },
                                    "points": Array [
                                      "bc",
                                      "tc",
                                    ],
                                    "targetOffset": Array [
                                      0,
                                      0,
                                    ],
                                  },
                                  "topLeft": Object {
                                    "offset": Array [
                                      0,
                                      -4,
                                    ],
                                    "overflow": Object {
                                      "adjustX": 1,
                                      "adjustY": 1,
                                    },
                                    "points": Array [
                                      "bl",
                                      "tl",
                                    ],
                                    "targetOffset": Array [
                                      0,
                                      0,
                                    ],
                                  },
                                  "topRight": Object {
                                    "offset": Array [
                                      0,
                                      -4,
                                    ],
                                    "overflow": Object {
                                      "adjustX": 1,
                                      "adjustY": 1,
                                    },
                                    "points": Array [
                                      "br",
                                      "tr",
                                    ],
                                    "targetOffset": Array [
                                      0,
                                      0,
                                    ],
                                  },
                                }
                              }
                              defaultPopupVisible={false}
                              destroyPopupOnHide={false}
                              focusDelay={0}
                              getDocument={[Function]}
                              getPopupClassNameFromAlign={[Function]}
                              hideAction={Array []}
                              mask={false}
                              maskClosable={true}
                              mouseEnterDelay={0.1}
                              mouseLeaveDelay={0.1}
                              onPopupAlign={[Function]}
                              onPopupVisibleChange={[Function]}
                              onVisibleChange={[Function]}
                              overlay={
                                <Menu
                                  aria-activedescendant={null}
                                  aria-label="expanded dropdown"
                                  id="rc-tabs-test-more-popup"
                                  onClick={[Function]}
                                  role="listbox"
                                  selectedKeys={
                                    Array [
                                      null,
                                    ]
                                  }
                                  tabIndex={-1}
                                />
                              }
                              popup={
                                <React.Fragment>
                                  <Menu
                                    aria-activedescendant={null}
                                    aria-label="expanded dropdown"
                                    id="rc-tabs-test-more-popup"
                                    onClick={[Function]}
                                    prefixCls="ant-tabs-dropdown-menu"
                                    role="listbox"
                                    selectedKeys={
                                      Array [
                                        null,
                                      ]
                                    }
                                    tabIndex={-1}
                                  />
                                </React.Fragment>
                              }
                              popupAlign={Object {}}
                              popupClassName=""
                              popupPlacement="bottomLeft"
                              popupStyle={Object {}}
                              popupTransitionName="ant-slide-up"
                              popupVisible={false}
                              prefixCls="ant-tabs-dropdown"
                              showAction={Array []}
                              stretch="minWidth"
                            >
                              <button
                                aria-controls="rc-tabs-test-more-popup"
                                aria-expanded={false}
                                aria-haspopup="listbox"
                                aria-hidden="true"
                                className="ant-tabs-nav-more"
                                id="rc-tabs-test-more"
                                key="trigger"
                                onKeyDown={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                style={
                                  Object {
                                    "marginLeft": undefined,
                                    "order": 1,
                                    "visibility": "hidden",
                                  }
                                }
                                tabIndex={-1}
                                type="button"
                              >
                                <ForwardRef(EllipsisOutlined)>
                                  <AntdIcon
                                    icon={
                                      Object {
                                        "icon": Object {
                                          "attrs": Object {
                                            "focusable": "false",
                                            "viewBox": "64 64 896 896",
                                          },
                                          "children": Array [
                                            Object {
                                              "attrs": Object {
                                                "d": "M176 511a56 56 0 10112 0 56 56 0 10-112 0zm280 0a56 56 0 10112 0 56 56 0 10-112 0zm280 0a56 56 0 10112 0 56 56 0 10-112 0z",
                                              },
                                              "tag": "path",
                                            },
                                          ],
                                          "tag": "svg",
                                        },
                                        "name": "ellipsis",
                                        "theme": "outlined",
                                      }
                                    }
                                  >
                                    <span
                                      aria-label="ellipsis"
                                      className="anticon anticon-ellipsis"
                                      role="img"
                                    >
                                      <IconReact
                                        icon={
                                          Object {
                                            "icon": Object {
                                              "attrs": Object {
                                                "focusable": "false",
                                                "viewBox": "64 64 896 896",
                                              },
                                              "children": Array [
                                                Object {
                                                  "attrs": Object {
                                                    "d": "M176 511a56 56 0 10112 0 56 56 0 10-112 0zm280 0a56 56 0 10112 0 56 56 0 10-112 0zm280 0a56 56 0 10112 0 56 56 0 10-112 0z",
                                                  },
                                                  "tag": "path",
                                                },
                                              ],
                                              "tag": "svg",
                                            },
                                            "name": "ellipsis",
                                            "theme": "outlined",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden="true"
                                          data-icon="ellipsis"
                                          fill="currentColor"
                                          focusable="false"
                                          height="1em"
                                          key="svg-ellipsis"
                                          viewBox="64 64 896 896"
                                          width="1em"
                                        >
                                          <path
                                            d="M176 511a56 56 0 10112 0 56 56 0 10-112 0zm280 0a56 56 0 10112 0 56 56 0 10-112 0zm280 0a56 56 0 10112 0 56 56 0 10-112 0z"
                                            key="svg-ellipsis-svg-0"
                                          />
                                        </svg>
                                      </IconReact>
                                    </span>
                                  </AntdIcon>
                                </ForwardRef(EllipsisOutlined)>
                              </button>
                            </Trigger>
                          </ForwardRef(Dropdown)>
                          <ForwardRef(AddButton)
                            prefixCls="ant-tabs"
                          />
                        </div>
                      </ForwardRef(OperationNode)>
                      <ExtraContent
                        position="right"
                        prefixCls="ant-tabs"
                      />
                    </div>
                  </ForwardRef(TabNavList)>
                  <TabPanelList
                    activeKey=""
                    animated={
                      Object {
                        "inkBar": true,
                        "tabPane": false,
                      }
                    }
                    id="rc-tabs-test"
                    mobile={false}
                    rtl={false}
                    tabPosition="top"
                  >
                    <div
                      className="ant-tabs-content-holder"
                    >
                      <div
                        className="ant-tabs-content ant-tabs-content-top"
                        style={null}
                      >
                        <TabPane
                          active={true}
                          animated={false}
                          id="rc-tabs-test"
                          key=""
                          prefixCls="ant-tabs"
                          style={
                            Object {
                              "height": 0,
                            }
                          }
                          tab="全部"
                          tabKey=""
                        >
                          <div
                            aria-hidden={false}
                            aria-labelledby="rc-tabs-test-tab-"
                            className="ant-tabs-tabpane ant-tabs-tabpane-active"
                            id="rc-tabs-test-panel-"
                            role="tabpanel"
                            style={
                              Object {
                                "height": 0,
                              }
                            }
                            tabIndex={0}
                          />
                        </TabPane>
                      </div>
                    </div>
                  </TabPanelList>
                </div>
              </ForwardRef(Tabs)>
            </Tabs>
          </div>
        </FilterTabs>
        <div
          className="abstract-flex"
        >
          <Table
            buttons={
              Array [
                Object {
                  "click": [Function],
                  "icon": <ForwardRef(PlusOutlined) />,
                  "name": "新增",
                },
                Object {
                  "click": [Function],
                  "name": "导出",
                  "target": "cell",
                },
                Object {
                  "action": "up",
                  "name": "单个上架",
                  "select": "single",
                },
                Object {
                  "click": [Function],
                  "name": "批量上架",
                  "select": "multiple",
                },
                Object {
                  "click": [Function],
                  "confirm": "您确定要上架?",
                  "enable": [Function],
                  "name": "上架",
                  "target": "cell",
                },
                Object {
                  "action": "view",
                  "name": "查看",
                  "target": "cell",
                },
                Object {
                  "click": [Function],
                  "confirm": "您确定批量下架选择的项?",
                  "enable": [Function],
                  "name": "批量下架",
                  "select": "multiple",
                },
              ]
            }
            className="abstract-flex abstract-table-inner"
            columns={
              Array [
                Object {
                  "className": "column-name",
                  "dataIndex": "name",
                  "defaultSortOrder": undefined,
                  "ellipsis": true,
                  "key": "col-name",
                  "name": "name",
                  "render": [Function],
                  "sorter": false,
                  "title": "用户名",
                  "width": undefined,
                },
                Object {
                  "className": "column-sex",
                  "dataIndex": "sex",
                  "defaultSortOrder": undefined,
                  "ellipsis": true,
                  "enums": Object {
                    "女": 2,
                    "男": 1,
                  },
                  "key": "col-sex",
                  "name": "sex",
                  "render": [Function],
                  "sorter": false,
                  "title": "性别",
                  "width": undefined,
                },
                Object {
                  "className": "column-status",
                  "dataIndex": "status",
                  "defaultSortOrder": undefined,
                  "ellipsis": true,
                  "enums": Object {
                    "启用": 2,
                    "新建": 1,
                    "禁用": 3,
                  },
                  "key": "col-status",
                  "name": "status",
                  "render": [Function],
                  "sorter": false,
                  "title": "状态",
                  "width": undefined,
                },
                Object {
                  "className": "column-department",
                  "dataIndex": "department",
                  "defaultSortOrder": undefined,
                  "ellipsis": true,
                  "key": "col-department",
                  "name": "department",
                  "render": [Function],
                  "sorter": false,
                  "title": "部门",
                  "width": undefined,
                },
                Object {
                  "className": "column-cell-operator",
                  "dataIndex": "cell-operator",
                  "defaultSortOrder": undefined,
                  "ellipsis": true,
                  "fixed": "right",
                  "key": "col-cell-operator",
                  "name": "cell-operator",
                  "render": [Function],
                  "sorter": false,
                  "title": "操作",
                  "width": undefined,
                },
              ]
            }
            data={Object {}}
            dataSource={Array []}
            initQuery={true}
            onActionRoute={[Function]}
            onChange={[Function]}
            onQuery={[Function]}
            onSelectRows={[Function]}
            order="descend"
            pageSize={100}
            pagination={
              Object {
                "current": 1,
                "pageCount": 0,
                "pageSize": 100,
                "total": 0,
              }
            }
            paramMode="mix"
            rowKey="id"
            rowSelection={
              Object {
                "onSelect": [Function],
                "onSelectAll": [Function],
                "selectedRowKeys": Array [],
                "type": "checkbox",
              }
            }
            scroll={
              Object {
                "x": "100%",
                "y": -118,
              }
            }
            selectedRows={Array []}
            sort="name"
          >
            <div
              className="ant-table-wrapper abstract-flex abstract-table-inner"
            >
              <Spin
                size="default"
                spinning={false}
                wrapperClassName=""
              >
                <div
                  className="ant-spin-nested-loading"
                >
                  <div
                    className="ant-spin-container"
                    key="container"
                  >
                    <Table
                      buttons={
                        Array [
                          Object {
                            "click": [Function],
                            "icon": <ForwardRef(PlusOutlined) />,
                            "name": "新增",
                          },
                          Object {
                            "click": [Function],
                            "name": "导出",
                            "target": "cell",
                          },
                          Object {
                            "action": "up",
                            "name": "单个上架",
                            "select": "single",
                          },
                          Object {
                            "click": [Function],
                            "name": "批量上架",
                            "select": "multiple",
                          },
                          Object {
                            "click": [Function],
                            "confirm": "您确定要上架?",
                            "enable": [Function],
                            "name": "上架",
                            "target": "cell",
                          },
                          Object {
                            "action": "view",
                            "name": "查看",
                            "target": "cell",
                          },
                          Object {
                            "click": [Function],
                            "confirm": "您确定批量下架选择的项?",
                            "enable": [Function],
                            "name": "批量下架",
                            "select": "multiple",
                          },
                        ]
                      }
                      className="ant-table-empty"
                      columns={
                        Array [
                          Object {
                            "className": "column-name",
                            "dataIndex": "name",
                            "defaultSortOrder": undefined,
                            "ellipsis": true,
                            "key": "col-name",
                            "name": "name",
                            "render": [Function],
                            "sorter": false,
                            "title": "用户名",
                            "width": undefined,
                          },
                          Object {
                            "className": "column-sex",
                            "dataIndex": "sex",
                            "defaultSortOrder": undefined,
                            "ellipsis": true,
                            "enums": Object {
                              "女": 2,
                              "男": 1,
                            },
                            "key": "col-sex",
                            "name": "sex",
                            "render": [Function],
                            "sorter": false,
                            "title": "性别",
                            "width": undefined,
                          },
                          Object {
                            "className": "column-status",
                            "dataIndex": "status",
                            "defaultSortOrder": undefined,
                            "ellipsis": true,
                            "enums": Object {
                              "启用": 2,
                              "新建": 1,
                              "禁用": 3,
                            },
                            "key": "col-status",
                            "name": "status",
                            "render": [Function],
                            "sorter": false,
                            "title": "状态",
                            "width": undefined,
                          },
                          Object {
                            "className": "column-department",
                            "dataIndex": "department",
                            "defaultSortOrder": undefined,
                            "ellipsis": true,
                            "key": "col-department",
                            "name": "department",
                            "render": [Function],
                            "sorter": false,
                            "title": "部门",
                            "width": undefined,
                          },
                          Object {
                            "className": "column-cell-operator",
                            "dataIndex": "cell-operator",
                            "defaultSortOrder": undefined,
                            "ellipsis": true,
                            "fixed": "right",
                            "key": "col-cell-operator",
                            "name": "cell-operator",
                            "render": [Function],
                            "sorter": false,
                            "title": "操作",
                            "width": undefined,
                          },
                        ]
                      }
                      data={Array []}
                      dataSource={Array []}
                      emptyText={
                        <Context.Consumer>
                          [Function]
                        </Context.Consumer>
                      }
                      expandable={
                        Object {
                          "__PARENT_RENDER_ICON__": undefined,
                          "childrenColumnName": undefined,
                          "expandIcon": [Function],
                          "expandIconColumnIndex": undefined,
                          "indentSize": 15,
                        }
                      }
                      initQuery={true}
                      internalHooks="rc-table-internal-hook"
                      internalRefs={
                        Object {
                          "body": Object {
                            "current": <div
                              class="ant-table-body"
                              style="overflow-x: auto; overflow-y: scroll; max-height: -118px;"
                            >
                              <table
                                style="width: 100%; min-width: 100%; table-layout: fixed;"
                              >
                                <colgroup>
                                  <col
                                    class="ant-table-selection-col"
                                  />
                                </colgroup>
                                <tbody
                                  class="ant-table-tbody"
                                >
                                  <tr
                                    aria-hidden="true"
                                    class="ant-table-measure-row"
                                    style="height: 0px; font-size: 0;"
                                  >
                                    <td
                                      style="padding: 0px; border: 0px; height: 0px;"
                                    >
                                      <div
                                        style="height: 0px; overflow: hidden;"
                                      >
                                         
                                      </div>
                                    </td>
                                    <td
                                      style="padding: 0px; border: 0px; height: 0px;"
                                    >
                                      <div
                                        style="height: 0px; overflow: hidden;"
                                      >
                                         
                                      </div>
                                    </td>
                                    <td
                                      style="padding: 0px; border: 0px; height: 0px;"
                                    >
                                      <div
                                        style="height: 0px; overflow: hidden;"
                                      >
                                         
                                      </div>
                                    </td>
                                    <td
                                      style="padding: 0px; border: 0px; height: 0px;"
                                    >
                                      <div
                                        style="height: 0px; overflow: hidden;"
                                      >
                                         
                                      </div>
                                    </td>
                                    <td
                                      style="padding: 0px; border: 0px; height: 0px;"
                                    >
                                      <div
                                        style="height: 0px; overflow: hidden;"
                                      >
                                         
                                      </div>
                                    </td>
                                    <td
                                      style="padding: 0px; border: 0px; height: 0px;"
                                    >
                                      <div
                                        style="height: 0px; overflow: hidden;"
                                      >
                                         
                                      </div>
                                    </td>
                                  </tr>
                                  <tr
                                    class="ant-table-placeholder"
                                  >
                                    <td
                                      class="ant-table-cell"
                                      colspan="6"
                                    >
                                      <div
                                        class="ant-table-expanded-row-fixed"
                                        style="width: 0px; position: sticky; left: 0px; overflow: hidden;"
                                      >
                                        <div
                                          class="ant-empty ant-empty-normal"
                                        >
                                          <div
                                            class="ant-empty-image"
                                          >
                                            <svg
                                              class="ant-empty-img-simple"
                                              height="41"
                                              viewBox="0 0 64 41"
                                              width="64"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <g
                                                fill="none"
                                                fill-rule="evenodd"
                                                transform="translate(0 1)"
                                              >
                                                <ellipse
                                                  class="ant-empty-img-simple-ellipse"
                                                  cx="32"
                                                  cy="33"
                                                  rx="32"
                                                  ry="7"
                                                />
                                                <g
                                                  class="ant-empty-img-simple-g"
                                                  fill-rule="nonzero"
                                                >
                                                  <path
                                                    d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                  />
                                                  <path
                                                    class="ant-empty-img-simple-path"
                                                    d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                  />
                                                </g>
                                              </g>
                                            </svg>
                                          </div>
                                          <div
                                            class="ant-empty-description"
                                          >
                                            No Data
                                          </div>
                                        </div>
                                      </div>
                                    </td>
                                  </tr>
                                </tbody>
                              </table>
                            </div>,
                          },
                        }
                      }
                      onActionRoute={[Function]}
                      onChange={[Function]}
                      onQuery={[Function]}
                      onSelectRows={[Function]}
                      order="descend"
                      pageSize={100}
                      pagination={
                        Object {
                          "current": 1,
                          "pageCount": 0,
                          "pageSize": 100,
                          "total": 0,
                        }
                      }
                      paramMode="mix"
                      prefixCls="ant-table"
                      rowClassName={[Function]}
                      rowKey={[Function]}
                      rowSelection={
                        Object {
                          "onSelect": [Function],
                          "onSelectAll": [Function],
                          "selectedRowKeys": Array [],
                          "type": "checkbox",
                        }
                      }
                      scroll={
                        Object {
                          "x": "100%",
                          "y": -118,
                        }
                      }
                      selectedRows={Array []}
                      sort="name"
                      transformColumns={[Function]}
                    >
                      <ResizeObserver
                        onResize={[Function]}
                      >
                        <div
                          className="ant-table ant-table-empty ant-table-fixed-header ant-table-fixed-column ant-table-scroll-horizontal ant-table-has-fix-right"
                        >
                          <Component
                            pingLeft={false}
                            pingRight={false}
                            props={
                              Object {
                                "buttons": Array [
                                  Object {
                                    "click": [Function],
                                    "icon": <ForwardRef(PlusOutlined) />,
                                    "name": "新增",
                                  },
                                  Object {
                                    "click": [Function],
                                    "name": "导出",
                                    "target": "cell",
                                  },
                                  Object {
                                    "action": "up",
                                    "name": "单个上架",
                                    "select": "single",
                                  },
                                  Object {
                                    "click": [Function],
                                    "name": "批量上架",
                                    "select": "multiple",
                                  },
                                  Object {
                                    "click": [Function],
                                    "confirm": "您确定要上架?",
                                    "enable": [Function],
                                    "name": "上架",
                                    "target": "cell",
                                  },
                                  Object {
                                    "action": "view",
                                    "name": "查看",
                                    "target": "cell",
                                  },
                                  Object {
                                    "click": [Function],
                                    "confirm": "您确定批量下架选择的项?",
                                    "enable": [Function],
                                    "name": "批量下架",
                                    "select": "multiple",
                                  },
                                ],
                                "cellWidth": undefined,
                                "className": "ant-table-empty",
                                "columns": Array [
                                  Object {
                                    "className": "column-name",
                                    "dataIndex": "name",
                                    "defaultSortOrder": undefined,
                                    "ellipsis": true,
                                    "key": "col-name",
                                    "name": "name",
                                    "render": [Function],
                                    "sorter": false,
                                    "title": "用户名",
                                    "width": undefined,
                                  },
                                  Object {
                                    "className": "column-sex",
                                    "dataIndex": "sex",
                                    "defaultSortOrder": undefined,
                                    "ellipsis": true,
                                    "enums": Object {
                                      "女": 2,
                                      "男": 1,
                                    },
                                    "key": "col-sex",
                                    "name": "sex",
                                    "render": [Function],
                                    "sorter": false,
                                    "title": "性别",
                                    "width": undefined,
                                  },
                                  Object {
                                    "className": "column-status",
                                    "dataIndex": "status",
                                    "defaultSortOrder": undefined,
                                    "ellipsis": true,
                                    "enums": Object {
                                      "启用": 2,
                                      "新建": 1,
                                      "禁用": 3,
                                    },
                                    "key": "col-status",
                                    "name": "status",
                                    "render": [Function],
                                    "sorter": false,
                                    "title": "状态",
                                    "width": undefined,
                                  },
                                  Object {
                                    "className": "column-department",
                                    "dataIndex": "department",
                                    "defaultSortOrder": undefined,
                                    "ellipsis": true,
                                    "key": "col-department",
                                    "name": "department",
                                    "render": [Function],
                                    "sorter": false,
                                    "title": "部门",
                                    "width": undefined,
                                  },
                                  Object {
                                    "className": "column-cell-operator",
                                    "dataIndex": "cell-operator",
                                    "defaultSortOrder": undefined,
                                    "ellipsis": true,
                                    "fixed": "right",
                                    "key": "col-cell-operator",
                                    "name": "cell-operator",
                                    "render": [Function],
                                    "sorter": false,
                                    "title": "操作",
                                    "width": undefined,
                                  },
                                ],
                                "data": Array [],
                                "dataSource": Array [],
                                "direction": undefined,
                                "emptyText": <Context.Consumer>
                                  [Function]
                                </Context.Consumer>,
                                "expandable": Object {
                                  "__PARENT_RENDER_ICON__": undefined,
                                  "childrenColumnName": undefined,
                                  "expandIcon": [Function],
                                  "expandIconColumnIndex": undefined,
                                  "indentSize": 15,
                                },
                                "initQuery": true,
                                "internalHooks": "rc-table-internal-hook",
                                "internalRefs": Object {
                                  "body": Object {
                                    "current": <div
                                      class="ant-table-body"
                                      style="overflow-x: auto; overflow-y: scroll; max-height: -118px;"
                                    >
                                      <table
                                        style="width: 100%; min-width: 100%; table-layout: fixed;"
                                      >
                                        <colgroup>
                                          <col
                                            class="ant-table-selection-col"
                                          />
                                        </colgroup>
                                        <tbody
                                          class="ant-table-tbody"
                                        >
                                          <tr
                                            aria-hidden="true"
                                            class="ant-table-measure-row"
                                            style="height: 0px; font-size: 0;"
                                          >
                                            <td
                                              style="padding: 0px; border: 0px; height: 0px;"
                                            >
                                              <div
                                                style="height: 0px; overflow: hidden;"
                                              >
                                                 
                                              </div>
                                            </td>
                                            <td
                                              style="padding: 0px; border: 0px; height: 0px;"
                                            >
                                              <div
                                                style="height: 0px; overflow: hidden;"
                                              >
                                                 
                                              </div>
                                            </td>
                                            <td
                                              style="padding: 0px; border: 0px; height: 0px;"
                                            >
                                              <div
                                                style="height: 0px; overflow: hidden;"
                                              >
                                                 
                                              </div>
                                            </td>
                                            <td
                                              style="padding: 0px; border: 0px; height: 0px;"
                                            >
                                              <div
                                                style="height: 0px; overflow: hidden;"
                                              >
                                                 
                                              </div>
                                            </td>
                                            <td
                                              style="padding: 0px; border: 0px; height: 0px;"
                                            >
                                              <div
                                                style="height: 0px; overflow: hidden;"
                                              >
                                                 
                                              </div>
                                            </td>
                                            <td
                                              style="padding: 0px; border: 0px; height: 0px;"
                                            >
                                              <div
                                                style="height: 0px; overflow: hidden;"
                                              >
                                                 
                                              </div>
                                            </td>
                                          </tr>
                                          <tr
                                            class="ant-table-placeholder"
                                          >
                                            <td
                                              class="ant-table-cell"
                                              colspan="6"
                                            >
                                              <div
                                                class="ant-table-expanded-row-fixed"
                                                style="width: 0px; position: sticky; left: 0px; overflow: hidden;"
                                              >
                                                <div
                                                  class="ant-empty ant-empty-normal"
                                                >
                                                  <div
                                                    class="ant-empty-image"
                                                  >
                                                    <svg
                                                      class="ant-empty-img-simple"
                                                      height="41"
                                                      viewBox="0 0 64 41"
                                                      width="64"
                                                      xmlns="http://www.w3.org/2000/svg"
                                                    >
                                                      <g
                                                        fill="none"
                                                        fill-rule="evenodd"
                                                        transform="translate(0 1)"
                                                      >
                                                        <ellipse
                                                          class="ant-empty-img-simple-ellipse"
                                                          cx="32"
                                                          cy="33"
                                                          rx="32"
                                                          ry="7"
                                                        />
                                                        <g
                                                          class="ant-empty-img-simple-g"
                                                          fill-rule="nonzero"
                                                        >
                                                          <path
                                                            d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                          />
                                                          <path
                                                            class="ant-empty-img-simple-path"
                                                            d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                          />
                                                        </g>
                                                      </g>
                                                    </svg>
                                                  </div>
                                                  <div
                                                    class="ant-empty-description"
                                                  >
                                                    No Data
                                                  </div>
                                                </div>
                                              </div>
                                            </td>
                                          </tr>
                                        </tbody>
                                      </table>
                                    </div>,
                                  },
                                },
                                "loading": undefined,
                                "mergedExpandedKeys": Set {},
                                "onActionRoute": [Function],
                                "onChange": [Function],
                                "onQuery": [Function],
                                "onSelectRows": [Function],
                                "order": "descend",
                                "pageSize": 100,
                                "pagination": Object {
                                  "current": 1,
                                  "pageCount": 0,
                                  "pageSize": 100,
                                  "total": 0,
                                },
                                "paramMode": "mix",
                                "prefixCls": "ant-table",
                                "rowClassName": [Function],
                                "rowKey": [Function],
                                "rowSelection": Object {
                                  "onSelect": [Function],
                                  "onSelectAll": [Function],
                                  "selectedRowKeys": Array [],
                                  "type": "checkbox",
                                },
                                "scroll": Object {
                                  "x": "100%",
                                  "y": -118,
                                },
                                "selectedRows": Array [],
                                "sort": "name",
                                "stickyOffsets": Object {
                                  "left": Array [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                  "right": Array [
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                  ],
                                },
                                "transformColumns": [Function],
                              }
                            }
                          >
                            <div
                              className="ant-table-container"
                            >
                              <FixedHolder
                                className="ant-table-header"
                                colWidths={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                                columCount={6}
                                columns={
                                  Array [
                                    Object {
                                      "RC_TABLE_INTERNAL_COL_DEFINE": Object {
                                        "className": "ant-table-selection-col",
                                      },
                                      "className": "ant-table-selection-column",
                                      "fixed": undefined,
                                      "render": [Function],
                                      "title": <div
                                        className="ant-table-selection"
                                      >
                                        <ForwardRef(InternalCheckbox)
                                          checked={false}
                                          disabled={true}
                                          indeterminate={false}
                                          onChange={[Function]}
                                          skipGroup={true}
                                        />
                                      </div>,
                                      "width": undefined,
                                    },
                                    Object {
                                      "className": "column-name",
                                      "dataIndex": "name",
                                      "defaultSortOrder": undefined,
                                      "ellipsis": true,
                                      "key": "col-name",
                                      "name": "name",
                                      "render": [Function],
                                      "sorter": false,
                                      "title": "用户名",
                                      "width": undefined,
                                    },
                                    Object {
                                      "className": "column-sex",
                                      "dataIndex": "sex",
                                      "defaultSortOrder": undefined,
                                      "ellipsis": true,
                                      "enums": Object {
                                        "女": 2,
                                        "男": 1,
                                      },
                                      "key": "col-sex",
                                      "name": "sex",
                                      "render": [Function],
                                      "sorter": false,
                                      "title": "性别",
                                      "width": undefined,
                                    },
                                    Object {
                                      "className": "column-status",
                                      "dataIndex": "status",
                                      "defaultSortOrder": undefined,
                                      "ellipsis": true,
                                      "enums": Object {
                                        "启用": 2,
                                        "新建": 1,
                                        "禁用": 3,
                                      },
                                      "key": "col-status",
                                      "name": "status",
                                      "render": [Function],
                                      "sorter": false,
                                      "title": "状态",
                                      "width": undefined,
                                    },
                                    Object {
                                      "className": "column-department",
                                      "dataIndex": "department",
                                      "defaultSortOrder": undefined,
                                      "ellipsis": true,
                                      "key": "col-department",
                                      "name": "department",
                                      "render": [Function],
                                      "sorter": false,
                                      "title": "部门",
                                      "width": undefined,
                                    },
                                    Object {
                                      "className": "column-cell-operator",
                                      "dataIndex": "cell-operator",
                                      "defaultSortOrder": undefined,
                                      "ellipsis": true,
                                      "fixed": "right",
                                      "key": "col-cell-operator",
                                      "name": "cell-operator",
                                      "render": [Function],
                                      "sorter": false,
                                      "title": "操作",
                                      "width": undefined,
                                    },
                                  ]
                                }
                                fixHeader={true}
                                flattenColumns={
                                  Array [
                                    Object {
                                      "RC_TABLE_INTERNAL_COL_DEFINE": Object {
                                        "className": "ant-table-selection-col",
                                      },
                                      "className": "ant-table-selection-column",
                                      "fixed": undefined,
                                      "render": [Function],
                                      "title": <div
                                        className="ant-table-selection"
                                      >
                                        <ForwardRef(InternalCheckbox)
                                          checked={false}
                                          disabled={true}
                                          indeterminate={false}
                                          onChange={[Function]}
                                          skipGroup={true}
                                        />
                                      </div>,
                                      "width": undefined,
                                    },
                                    Object {
                                      "className": "column-name",
                                      "dataIndex": "name",
                                      "defaultSortOrder": undefined,
                                      "ellipsis": true,
                                      "fixed": undefined,
                                      "key": "col-name",
                                      "name": "name",
                                      "render": [Function],
                                      "sorter": false,
                                      "title": "用户名",
                                      "width": undefined,
                                    },
                                    Object {
                                      "className": "column-sex",
                                      "dataIndex": "sex",
                                      "defaultSortOrder": undefined,
                                      "ellipsis": true,
                                      "enums": Object {
                                        "女": 2,
                                        "男": 1,
                                      },
                                      "fixed": undefined,
                                      "key": "col-sex",
                                      "name": "sex",
                                      "render": [Function],
                                      "sorter": false,
                                      "title": "性别",
                                      "width": undefined,
                                    },
                                    Object {
                                      "className": "column-status",
                                      "dataIndex": "status",
                                      "defaultSortOrder": undefined,
                                      "ellipsis": true,
                                      "enums": Object {
                                        "启用": 2,
                                        "新建": 1,
                                        "禁用": 3,
                                      },
                                      "fixed": undefined,
                                      "key": "col-status",
                                      "name": "status",
                                      "render": [Function],
                                      "sorter": false,
                                      "title": "状态",
                                      "width": undefined,
                                    },
                                    Object {
                                      "className": "column-department",
                                      "dataIndex": "department",
                                      "defaultSortOrder": undefined,
                                      "ellipsis": true,
                                      "fixed": undefined,
                                      "key": "col-department",
                                      "name": "department",
                                      "render": [Function],
                                      "sorter": false,
                                      "title": "部门",
                                      "width": undefined,
                                    },
                                    Object {
                                      "className": "column-cell-operator",
                                      "dataIndex": "cell-operator",
                                      "defaultSortOrder": undefined,
                                      "ellipsis": true,
                                      "fixed": "right",
                                      "key": "col-cell-operator",
                                      "name": "cell-operator",
                                      "render": [Function],
                                      "sorter": false,
                                      "title": "操作",
                                      "width": undefined,
                                    },
                                  ]
                                }
                                maxContentScroll={false}
                                noData={true}
                                onScroll={[Function]}
                                scroll={
                                  Object {
                                    "x": "100%",
                                    "y": -118,
                                  }
                                }
                                stickyClassName=""
                                stickyOffsets={
                                  Object {
                                    "left": Array [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                    "right": Array [
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                      0,
                                    ],
                                  }
                                }
                                stickyTopOffset={0}
                              >
                                <div
                                  className="ant-table-header"
                                  style={
                                    Object {
                                      "overflow": "hidden",
                                    }
                                  }
                                >
                                  <table
                                    style={
                                      Object {
                                        "tableLayout": "fixed",
                                        "visibility": null,
                                      }
                                    }
                                  >
                                    <ColGroup
                                      colWidths={Array []}
                                      columCount={7}
                                      columns={
                                        Array [
                                          Object {
                                            "RC_TABLE_INTERNAL_COL_DEFINE": Object {
                                              "className": "ant-table-selection-col",
                                            },
                                            "className": "ant-table-selection-column",
                                            "fixed": undefined,
                                            "render": [Function],
                                            "title": <div
                                              className="ant-table-selection"
                                            >
                                              <ForwardRef(InternalCheckbox)
                                                checked={false}
                                                disabled={true}
                                                indeterminate={false}
                                                onChange={[Function]}
                                                skipGroup={true}
                                              />
                                            </div>,
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-name",
                                            "dataIndex": "name",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "fixed": undefined,
                                            "key": "col-name",
                                            "name": "name",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "用户名",
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-sex",
                                            "dataIndex": "sex",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "enums": Object {
                                              "女": 2,
                                              "男": 1,
                                            },
                                            "fixed": undefined,
                                            "key": "col-sex",
                                            "name": "sex",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "性别",
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-status",
                                            "dataIndex": "status",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "enums": Object {
                                              "启用": 2,
                                              "新建": 1,
                                              "禁用": 3,
                                            },
                                            "fixed": undefined,
                                            "key": "col-status",
                                            "name": "status",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "状态",
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-department",
                                            "dataIndex": "department",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "fixed": undefined,
                                            "key": "col-department",
                                            "name": "department",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "部门",
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-cell-operator",
                                            "dataIndex": "cell-operator",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "fixed": "right",
                                            "key": "col-cell-operator",
                                            "name": "cell-operator",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "操作",
                                            "width": undefined,
                                          },
                                        ]
                                      }
                                    >
                                      <colgroup>
                                        <col
                                          className="ant-table-selection-col"
                                          key="0"
                                          style={
                                            Object {
                                              "width": undefined,
                                            }
                                          }
                                        />
                                      </colgroup>
                                    </ColGroup>
                                    <Header
                                      columns={
                                        Array [
                                          Object {
                                            "RC_TABLE_INTERNAL_COL_DEFINE": Object {
                                              "className": "ant-table-selection-col",
                                            },
                                            "className": "ant-table-selection-column",
                                            "fixed": undefined,
                                            "render": [Function],
                                            "title": <div
                                              className="ant-table-selection"
                                            >
                                              <ForwardRef(InternalCheckbox)
                                                checked={false}
                                                disabled={true}
                                                indeterminate={false}
                                                onChange={[Function]}
                                                skipGroup={true}
                                              />
                                            </div>,
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-name",
                                            "dataIndex": "name",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "key": "col-name",
                                            "name": "name",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "用户名",
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-sex",
                                            "dataIndex": "sex",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "enums": Object {
                                              "女": 2,
                                              "男": 1,
                                            },
                                            "key": "col-sex",
                                            "name": "sex",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "性别",
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-status",
                                            "dataIndex": "status",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "enums": Object {
                                              "启用": 2,
                                              "新建": 1,
                                              "禁用": 3,
                                            },
                                            "key": "col-status",
                                            "name": "status",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "状态",
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-department",
                                            "dataIndex": "department",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "key": "col-department",
                                            "name": "department",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "部门",
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-cell-operator",
                                            "dataIndex": "cell-operator",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "fixed": "right",
                                            "key": "col-cell-operator",
                                            "name": "cell-operator",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "操作",
                                            "width": undefined,
                                          },
                                        ]
                                      }
                                      flattenColumns={
                                        Array [
                                          Object {
                                            "RC_TABLE_INTERNAL_COL_DEFINE": Object {
                                              "className": "ant-table-selection-col",
                                            },
                                            "className": "ant-table-selection-column",
                                            "fixed": undefined,
                                            "render": [Function],
                                            "title": <div
                                              className="ant-table-selection"
                                            >
                                              <ForwardRef(InternalCheckbox)
                                                checked={false}
                                                disabled={true}
                                                indeterminate={false}
                                                onChange={[Function]}
                                                skipGroup={true}
                                              />
                                            </div>,
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-name",
                                            "dataIndex": "name",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "fixed": undefined,
                                            "key": "col-name",
                                            "name": "name",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "用户名",
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-sex",
                                            "dataIndex": "sex",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "enums": Object {
                                              "女": 2,
                                              "男": 1,
                                            },
                                            "fixed": undefined,
                                            "key": "col-sex",
                                            "name": "sex",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "性别",
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-status",
                                            "dataIndex": "status",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "enums": Object {
                                              "启用": 2,
                                              "新建": 1,
                                              "禁用": 3,
                                            },
                                            "fixed": undefined,
                                            "key": "col-status",
                                            "name": "status",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "状态",
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-department",
                                            "dataIndex": "department",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "fixed": undefined,
                                            "key": "col-department",
                                            "name": "department",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "部门",
                                            "width": undefined,
                                          },
                                          Object {
                                            "className": "column-cell-operator",
                                            "dataIndex": "cell-operator",
                                            "defaultSortOrder": undefined,
                                            "ellipsis": true,
                                            "fixed": "right",
                                            "key": "col-cell-operator",
                                            "name": "cell-operator",
                                            "render": [Function],
                                            "sorter": false,
                                            "title": "操作",
                                            "width": undefined,
                                          },
                                        ]
                                      }
                                      scroll={
                                        Object {
                                          "x": "100%",
                                          "y": -118,
                                        }
                                      }
                                      stickyOffsets={
                                        Object {
                                          "isSticky": false,
                                          "left": Array [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                          "right": Array [
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                          ],
                                        }
                                      }
                                    >
                                      <thead
                                        className="ant-table-thead"
                                      >
                                        <HeaderRow
                                          cellComponent="th"
                                          cells={
                                            Array [
                                              Object {
                                                "children": <div
                                                  className="ant-table-selection"
                                                >
                                                  <ForwardRef(InternalCheckbox)
                                                    checked={false}
                                                    disabled={true}
                                                    indeterminate={false}
                                                    onChange={[Function]}
                                                    skipGroup={true}
                                                  />
                                                </div>,
                                                "className": "ant-table-selection-column",
                                                "colEnd": 0,
                                                "colSpan": 1,
                                                "colStart": 0,
                                                "column": Object {
                                                  "RC_TABLE_INTERNAL_COL_DEFINE": Object {
                                                    "className": "ant-table-selection-col",
                                                  },
                                                  "className": "ant-table-selection-column",
                                                  "fixed": undefined,
                                                  "render": [Function],
                                                  "title": <div
                                                    className="ant-table-selection"
                                                  >
                                                    <ForwardRef(InternalCheckbox)
                                                      checked={false}
                                                      disabled={true}
                                                      indeterminate={false}
                                                      onChange={[Function]}
                                                      skipGroup={true}
                                                    />
                                                  </div>,
                                                  "width": undefined,
                                                },
                                                "key": undefined,
                                                "rowSpan": 1,
                                              },
                                              Object {
                                                "children": "用户名",
                                                "className": "column-name",
                                                "colEnd": 1,
                                                "colSpan": 1,
                                                "colStart": 1,
                                                "column": Object {
                                                  "className": "column-name",
                                                  "dataIndex": "name",
                                                  "defaultSortOrder": undefined,
                                                  "ellipsis": true,
                                                  "key": "col-name",
                                                  "name": "name",
                                                  "render": [Function],
                                                  "sorter": false,
                                                  "title": "用户名",
                                                  "width": undefined,
                                                },
                                                "key": "col-name",
                                                "rowSpan": 1,
                                              },
                                              Object {
                                                "children": "性别",
                                                "className": "column-sex",
                                                "colEnd": 2,
                                                "colSpan": 1,
                                                "colStart": 2,
                                                "column": Object {
                                                  "className": "column-sex",
                                                  "dataIndex": "sex",
                                                  "defaultSortOrder": undefined,
                                                  "ellipsis": true,
                                                  "enums": Object {
                                                    "女": 2,
                                                    "男": 1,
                                                  },
                                                  "key": "col-sex",
                                                  "name": "sex",
                                                  "render": [Function],
                                                  "sorter": false,
                                                  "title": "性别",
                                                  "width": undefined,
                                                },
                                                "key": "col-sex",
                                                "rowSpan": 1,
                                              },
                                              Object {
                                                "children": "状态",
                                                "className": "column-status",
                                                "colEnd": 3,
                                                "colSpan": 1,
                                                "colStart": 3,
                                                "column": Object {
                                                  "className": "column-status",
                                                  "dataIndex": "status",
                                                  "defaultSortOrder": undefined,
                                                  "ellipsis": true,
                                                  "enums": Object {
                                                    "启用": 2,
                                                    "新建": 1,
                                                    "禁用": 3,
                                                  },
                                                  "key": "col-status",
                                                  "name": "status",
                                                  "render": [Function],
                                                  "sorter": false,
                                                  "title": "状态",
                                                  "width": undefined,
                                                },
                                                "key": "col-status",
                                                "rowSpan": 1,
                                              },
                                              Object {
                                                "children": "部门",
                                                "className": "column-department",
                                                "colEnd": 4,
                                                "colSpan": 1,
                                                "colStart": 4,
                                                "column": Object {
                                                  "className": "column-department",
                                                  "dataIndex": "department",
                                                  "defaultSortOrder": undefined,
                                                  "ellipsis": true,
                                                  "key": "col-department",
                                                  "name": "department",
                                                  "render": [Function],
                                                  "sorter": false,
                                                  "title": "部门",
                                                  "width": undefined,
                                                },
                                                "key": "col-department",
                                                "rowSpan": 1,
                                              },
                                              Object {
                                                "children": "操作",
                                                "className": "column-cell-operator",
                                                "colEnd": 5,
                                                "colSpan": 1,
                                                "colStart": 5,
                                                "column": Object {
                                                  "className": "column-cell-operator",
                                                  "dataIndex": "cell-operator",
                                                  "defaultSortOrder": undefined,
                                                  "ellipsis": true,
                                                  "fixed": "right",
                                                  "key": "col-cell-operator",
                                                  "name": "cell-operator",
                                                  "render": [Function],
                                                  "sorter": false,
                                                  "title": "操作",
                                                  "width": undefined,
                                                },
                                                "key": "col-cell-operator",
                                                "rowSpan": 1,
                                              },
                                            ]
                                          }
                                          flattenColumns={
                                            Array [
                                              Object {
                                                "RC_TABLE_INTERNAL_COL_DEFINE": Object {
                                                  "className": "ant-table-selection-col",
                                                },
                                                "className": "ant-table-selection-column",
                                                "fixed": undefined,
                                                "render": [Function],
                                                "title": <div
                                                  className="ant-table-selection"
                                                >
                                                  <ForwardRef(InternalCheckbox)
                                                    checked={false}
                                                    disabled={true}
                                                    indeterminate={false}
                                                    onChange={[Function]}
                                                    skipGroup={true}
                                                  />
                                                </div>,
                                                "width": undefined,
                                              },
                                              Object {
                                                "className": "column-name",
                                                "dataIndex": "name",
                                                "defaultSortOrder": undefined,
                                                "ellipsis": true,
                                                "fixed": undefined,
                                                "key": "col-name",
                                                "name": "name",
                                                "render": [Function],
                                                "sorter": false,
                                                "title": "用户名",
                                                "width": undefined,
                                              },
                                              Object {
                                                "className": "column-sex",
                                                "dataIndex": "sex",
                                                "defaultSortOrder": undefined,
                                                "ellipsis": true,
                                                "enums": Object {
                                                  "女": 2,
                                                  "男": 1,
                                                },
                                                "fixed": undefined,
                                                "key": "col-sex",
                                                "name": "sex",
                                                "render": [Function],
                                                "sorter": false,
                                                "title": "性别",
                                                "width": undefined,
                                              },
                                              Object {
                                                "className": "column-status",
                                                "dataIndex": "status",
                                                "defaultSortOrder": undefined,
                                                "ellipsis": true,
                                                "enums": Object {
                                                  "启用": 2,
                                                  "新建": 1,
                                                  "禁用": 3,
                                                },
                                                "fixed": undefined,
                                                "key": "col-status",
                                                "name": "status",
                                                "render": [Function],
                                                "sorter": false,
                                                "title": "状态",
                                                "width": undefined,
                                              },
                                              Object {
                                                "className": "column-department",
                                                "dataIndex": "department",
                                                "defaultSortOrder": undefined,
                                                "ellipsis": true,
                                                "fixed": undefined,
                                                "key": "col-department",
                                                "name": "department",
                                                "render": [Function],
                                                "sorter": false,
                                                "title": "部门",
                                                "width": undefined,
                                              },
                                              Object {
                                                "className": "column-cell-operator",
                                                "dataIndex": "cell-operator",
                                                "defaultSortOrder": undefined,
                                                "ellipsis": true,
                                                "fixed": "right",
                                                "key": "col-cell-operator",
                                                "name": "cell-operator",
                                                "render": [Function],
                                                "sorter": false,
                                                "title": "操作",
                                                "width": undefined,
                                              },
                                            ]
                                          }
                                          index={0}
                                          key="0"
                                          rowComponent="tr"
                                          stickyOffsets={
                                            Object {
                                              "isSticky": false,
                                              "left": Array [
                                                0,
                                                0,
                                                0,
                                                0,
                                                0,
                                                0,
                                              ],
                                              "right": Array [
                                                0,
                                                0,
                                                0,
                                                0,
                                                0,
                                                0,
                                                0,
                                              ],
                                            }
                                          }
                                        >
                                          <tr>
                                            <Cell
                                              className="ant-table-selection-column"
                                              colEnd={0}
                                              colSpan={1}
                                              colStart={0}
                                              column={
                                                Object {
                                                  "RC_TABLE_INTERNAL_COL_DEFINE": Object {
                                                    "className": "ant-table-selection-col",
                                                  },
                                                  "className": "ant-table-selection-column",
                                                  "fixed": undefined,
                                                  "render": [Function],
                                                  "title": <div
                                                    className="ant-table-selection"
                                                  >
                                                    <ForwardRef(InternalCheckbox)
                                                      checked={false}
                                                      disabled={true}
                                                      indeterminate={false}
                                                      onChange={[Function]}
                                                      skipGroup={true}
                                                    />
                                                  </div>,
                                                  "width": undefined,
                                                }
                                              }
                                              component="th"
                                              firstFixLeft={false}
                                              firstFixRight={false}
                                              isSticky={false}
                                              key="RC_TABLE_KEY"
                                              lastFixLeft={false}
                                              lastFixRight={false}
                                              prefixCls="ant-table"
                                              rowSpan={1}
                                              rowType="header"
                                            >
                                              <th
                                                className="ant-table-cell ant-table-selection-column"
                                                colSpan={null}
                                                rowSpan={null}
                                                style={Object {}}
                                              >
                                                <div
                                                  className="ant-table-selection"
                                                >
                                                  <Checkbox
                                                    checked={false}
                                                    disabled={true}
                                                    indeterminate={false}
                                                    onChange={[Function]}
                                                    skipGroup={true}
                                                  >
                                                    <label
                                                      className="ant-checkbox-wrapper ant-checkbox-wrapper-disabled"
                                                    >
                                                      <Checkbox
                                                        checked={false}
                                                        className=""
                                                        defaultChecked={false}
                                                        disabled={true}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-checkbox"
                                                        style={Object {}}
                                                        type="checkbox"
                                                      >
                                                        <span
                                                          className="ant-checkbox ant-checkbox-disabled"
                                                          style={Object {}}
                                                        >
                                                          <input
                                                            checked={false}
                                                            className="ant-checkbox-input"
                                                            disabled={true}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            type="checkbox"
                                                          />
                                                          <span
                                                            className="ant-checkbox-inner"
                                                          />
                                                        </span>
                                                      </Checkbox>
                                                    </label>
                                                  </Checkbox>
                                                </div>
                                              </th>
                                            </Cell>
                                            <Cell
                                              className="column-name"
                                              colEnd={1}
                                              colSpan={1}
                                              colStart={1}
                                              column={
                                                Object {
                                                  "className": "column-name",
                                                  "dataIndex": "name",
                                                  "defaultSortOrder": undefined,
                                                  "ellipsis": true,
                                                  "key": "col-name",
                                                  "name": "name",
                                                  "render": [Function],
                                                  "sorter": false,
                                                  "title": "用户名",
                                                  "width": undefined,
                                                }
                                              }
                                              component="th"
                                              ellipsis={true}
                                              firstFixLeft={false}
                                              firstFixRight={false}
                                              isSticky={false}
                                              key="col-name"
                                              lastFixLeft={false}
                                              lastFixRight={false}
                                              prefixCls="ant-table"
                                              rowSpan={1}
                                              rowType="header"
                                            >
                                              <th
                                                className="ant-table-cell column-name ant-table-cell-ellipsis"
                                                colSpan={null}
                                                rowSpan={null}
                                                style={Object {}}
                                                title="用户名"
                                              >
                                                用户名
                                              </th>
                                            </Cell>
                                            <Cell
                                              className="column-sex"
                                              colEnd={2}
                                              colSpan={1}
                                              colStart={2}
                                              column={
                                                Object {
                                                  "className": "column-sex",
                                                  "dataIndex": "sex",
                                                  "defaultSortOrder": undefined,
                                                  "ellipsis": true,
                                                  "enums": Object {
                                                    "女": 2,
                                                    "男": 1,
                                                  },
                                                  "key": "col-sex",
                                                  "name": "sex",
                                                  "render": [Function],
                                                  "sorter": false,
                                                  "title": "性别",
                                                  "width": undefined,
                                                }
                                              }
                                              component="th"
                                              ellipsis={true}
                                              firstFixLeft={false}
                                              firstFixRight={false}
                                              isSticky={false}
                                              key="col-sex"
                                              lastFixLeft={false}
                                              lastFixRight={false}
                                              prefixCls="ant-table"
                                              rowSpan={1}
                                              rowType="header"
                                            >
                                              <th
                                                className="ant-table-cell column-sex ant-table-cell-ellipsis"
                                                colSpan={null}
                                                rowSpan={null}
                                                style={Object {}}
                                                title="性别"
                                              >
                                                性别
                                              </th>
                                            </Cell>
                                            <Cell
                                              className="column-status"
                                              colEnd={3}
                                              colSpan={1}
                                              colStart={3}
                                              column={
                                                Object {
                                                  "className": "column-status",
                                                  "dataIndex": "status",
                                                  "defaultSortOrder": undefined,
                                                  "ellipsis": true,
                                                  "enums": Object {
                                                    "启用": 2,
                                                    "新建": 1,
                                                    "禁用": 3,
                                                  },
                                                  "key": "col-status",
                                                  "name": "status",
                                                  "render": [Function],
                                                  "sorter": false,
                                                  "title": "状态",
                                                  "width": undefined,
                                                }
                                              }
                                              component="th"
                                              ellipsis={true}
                                              firstFixLeft={false}
                                              firstFixRight={false}
                                              isSticky={false}
                                              key="col-status"
                                              lastFixLeft={false}
                                              lastFixRight={false}
                                              prefixCls="ant-table"
                                              rowSpan={1}
                                              rowType="header"
                                            >
                                              <th
                                                className="ant-table-cell column-status ant-table-cell-ellipsis"
                                                colSpan={null}
                                                rowSpan={null}
                                                style={Object {}}
                                                title="状态"
                                              >
                                                状态
                                              </th>
                                            </Cell>
                                            <Cell
                                              className="column-department"
                                              colEnd={4}
                                              colSpan={1}
                                              colStart={4}
                                              column={
                                                Object {
                                                  "className": "column-department",
                                                  "dataIndex": "department",
                                                  "defaultSortOrder": undefined,
                                                  "ellipsis": true,
                                                  "key": "col-department",
                                                  "name": "department",
                                                  "render": [Function],
                                                  "sorter": false,
                                                  "title": "部门",
                                                  "width": undefined,
                                                }
                                              }
                                              component="th"
                                              ellipsis={true}
                                              firstFixLeft={false}
                                              firstFixRight={false}
                                              isSticky={false}
                                              key="col-department"
                                              lastFixLeft={false}
                                              lastFixRight={false}
                                              prefixCls="ant-table"
                                              rowSpan={1}
                                              rowType="header"
                                            >
                                              <th
                                                className="ant-table-cell column-department ant-table-cell-ellipsis"
                                                colSpan={null}
                                                rowSpan={null}
                                                style={Object {}}
                                                title="部门"
                                              >
                                                部门
                                              </th>
                                            </Cell>
                                            <Cell
                                              className="column-cell-operator"
                                              colEnd={5}
                                              colSpan={1}
                                              colStart={5}
                                              column={
                                                Object {
                                                  "className": "column-cell-operator",
                                                  "dataIndex": "cell-operator",
                                                  "defaultSortOrder": undefined,
                                                  "ellipsis": true,
                                                  "fixed": "right",
                                                  "key": "col-cell-operator",
                                                  "name": "cell-operator",
                                                  "render": [Function],
                                                  "sorter": false,
                                                  "title": "操作",
                                                  "width": undefined,
                                                }
                                              }
                                              component="th"
                                              ellipsis={true}
                                              firstFixLeft={false}
                                              firstFixRight={true}
                                              fixRight={0}
                                              isSticky={false}
                                              key="col-cell-operator"
                                              lastFixLeft={false}
                                              lastFixRight={false}
                                              prefixCls="ant-table"
                                              rowSpan={1}
                                              rowType="header"
                                            >
                                              <th
                                                className="ant-table-cell column-cell-operator ant-table-cell-fix-right ant-table-cell-fix-right-first ant-table-cell-ellipsis"
                                                colSpan={null}
                                                rowSpan={null}
                                                style={
                                                  Object {
                                                    "position": "sticky",
                                                    "right": 0,
                                                  }
                                                }
                                                title="操作"
                                              >
                                                <span
                                                  className="ant-table-cell-content"
                                                >
                                                  操作
                                                </span>
                                              </th>
                                            </Cell>
                                          </tr>
                                        </HeaderRow>
                                      </thead>
                                    </Header>
                                  </table>
                                </div>
                              </FixedHolder>
                              <div
                                className="ant-table-body"
                                onScroll={[Function]}
                                style={
                                  Object {
                                    "maxHeight": -118,
                                    "overflowX": "auto",
                                    "overflowY": "scroll",
                                  }
                                }
                              >
                                <table
                                  style={
                                    Object {
                                      "minWidth": "100%",
                                      "tableLayout": "fixed",
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <ColGroup
                                    colWidths={
                                      Array [
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                      ]
                                    }
                                    columns={
                                      Array [
                                        Object {
                                          "RC_TABLE_INTERNAL_COL_DEFINE": Object {
                                            "className": "ant-table-selection-col",
                                          },
                                          "className": "ant-table-selection-column",
                                          "fixed": undefined,
                                          "render": [Function],
                                          "title": <div
                                            className="ant-table-selection"
                                          >
                                            <ForwardRef(InternalCheckbox)
                                              checked={false}
                                              disabled={true}
                                              indeterminate={false}
                                              onChange={[Function]}
                                              skipGroup={true}
                                            />
                                          </div>,
                                          "width": undefined,
                                        },
                                        Object {
                                          "className": "column-name",
                                          "dataIndex": "name",
                                          "defaultSortOrder": undefined,
                                          "ellipsis": true,
                                          "fixed": undefined,
                                          "key": "col-name",
                                          "name": "name",
                                          "render": [Function],
                                          "sorter": false,
                                          "title": "用户名",
                                          "width": undefined,
                                        },
                                        Object {
                                          "className": "column-sex",
                                          "dataIndex": "sex",
                                          "defaultSortOrder": undefined,
                                          "ellipsis": true,
                                          "enums": Object {
                                            "女": 2,
                                            "男": 1,
                                          },
                                          "fixed": undefined,
                                          "key": "col-sex",
                                          "name": "sex",
                                          "render": [Function],
                                          "sorter": false,
                                          "title": "性别",
                                          "width": undefined,
                                        },
                                        Object {
                                          "className": "column-status",
                                          "dataIndex": "status",
                                          "defaultSortOrder": undefined,
                                          "ellipsis": true,
                                          "enums": Object {
                                            "启用": 2,
                                            "新建": 1,
                                            "禁用": 3,
                                          },
                                          "fixed": undefined,
                                          "key": "col-status",
                                          "name": "status",
                                          "render": [Function],
                                          "sorter": false,
                                          "title": "状态",
                                          "width": undefined,
                                        },
                                        Object {
                                          "className": "column-department",
                                          "dataIndex": "department",
                                          "defaultSortOrder": undefined,
                                          "ellipsis": true,
                                          "fixed": undefined,
                                          "key": "col-department",
                                          "name": "department",
                                          "render": [Function],
                                          "sorter": false,
                                          "title": "部门",
                                          "width": undefined,
                                        },
                                        Object {
                                          "className": "column-cell-operator",
                                          "dataIndex": "cell-operator",
                                          "defaultSortOrder": undefined,
                                          "ellipsis": true,
                                          "fixed": "right",
                                          "key": "col-cell-operator",
                                          "name": "cell-operator",
                                          "render": [Function],
                                          "sorter": false,
                                          "title": "操作",
                                          "width": undefined,
                                        },
                                      ]
                                    }
                                  >
                                    <colgroup>
                                      <col
                                        className="ant-table-selection-col"
                                        key="0"
                                        style={
                                          Object {
                                            "width": undefined,
                                          }
                                        }
                                      />
                                    </colgroup>
                                  </ColGroup>
                                  <Body
                                    childrenColumnName="children"
                                    data={Array []}
                                    emptyNode={
                                      <Context.Consumer>
                                        [Function]
                                      </Context.Consumer>
                                    }
                                    expandedKeys={Set {}}
                                    getRowKey={[Function]}
                                    measureColumnWidth={true}
                                  >
                                    <tbody
                                      className="ant-table-tbody"
                                    >
                                      <tr
                                        aria-hidden="true"
                                        className="ant-table-measure-row"
                                        style={
                                          Object {
                                            "fontSize": 0,
                                            "height": 0,
                                          }
                                        }
                                      >
                                        <MeasureCell
                                          columnKey="RC_TABLE_KEY"
                                          key="RC_TABLE_KEY"
                                          onColumnResize={[Function]}
                                        >
                                          <ResizeObserver
                                            onResize={[Function]}
                                          >
                                            <td
                                              style={
                                                Object {
                                                  "border": 0,
                                                  "height": 0,
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                 
                                              </div>
                                            </td>
                                          </ResizeObserver>
                                        </MeasureCell>
                                        <MeasureCell
                                          columnKey="col-name"
                                          key="col-name"
                                          onColumnResize={[Function]}
                                        >
                                          <ResizeObserver
                                            onResize={[Function]}
                                          >
                                            <td
                                              style={
                                                Object {
                                                  "border": 0,
                                                  "height": 0,
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                 
                                              </div>
                                            </td>
                                          </ResizeObserver>
                                        </MeasureCell>
                                        <MeasureCell
                                          columnKey="col-sex"
                                          key="col-sex"
                                          onColumnResize={[Function]}
                                        >
                                          <ResizeObserver
                                            onResize={[Function]}
                                          >
                                            <td
                                              style={
                                                Object {
                                                  "border": 0,
                                                  "height": 0,
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                 
                                              </div>
                                            </td>
                                          </ResizeObserver>
                                        </MeasureCell>
                                        <MeasureCell
                                          columnKey="col-status"
                                          key="col-status"
                                          onColumnResize={[Function]}
                                        >
                                          <ResizeObserver
                                            onResize={[Function]}
                                          >
                                            <td
                                              style={
                                                Object {
                                                  "border": 0,
                                                  "height": 0,
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                 
                                              </div>
                                            </td>
                                          </ResizeObserver>
                                        </MeasureCell>
                                        <MeasureCell
                                          columnKey="col-department"
                                          key="col-department"
                                          onColumnResize={[Function]}
                                        >
                                          <ResizeObserver
                                            onResize={[Function]}
                                          >
                                            <td
                                              style={
                                                Object {
                                                  "border": 0,
                                                  "height": 0,
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                 
                                              </div>
                                            </td>
                                          </ResizeObserver>
                                        </MeasureCell>
                                        <MeasureCell
                                          columnKey="col-cell-operator"
                                          key="col-cell-operator"
                                          onColumnResize={[Function]}
                                        >
                                          <ResizeObserver
                                            onResize={[Function]}
                                          >
                                            <td
                                              style={
                                                Object {
                                                  "border": 0,
                                                  "height": 0,
                                                  "padding": 0,
                                                }
                                              }
                                            >
                                              <div
                                                style={
                                                  Object {
                                                    "height": 0,
                                                    "overflow": "hidden",
                                                  }
                                                }
                                              >
                                                 
                                              </div>
                                            </td>
                                          </ResizeObserver>
                                        </MeasureCell>
                                      </tr>
                                      <ExpandedRow
                                        cellComponent="td"
                                        className="ant-table-placeholder"
                                        colSpan={6}
                                        component="tr"
                                        componentWidth={0}
                                        expanded={true}
                                        fixColumn={true}
                                        fixHeader={true}
                                        horizonScroll={true}
                                        prefixCls="ant-table"
                                      >
                                        <tr
                                          className="ant-table-placeholder"
                                          style={
                                            Object {
                                              "display": null,
                                            }
                                          }
                                        >
                                          <Cell
                                            colSpan={6}
                                            component="td"
                                            prefixCls="ant-table"
                                          >
                                            <td
                                              className="ant-table-cell"
                                              colSpan={6}
                                              rowSpan={null}
                                              style={Object {}}
                                            >
                                              <div
                                                className="ant-table-expanded-row-fixed"
                                                style={
                                                  Object {
                                                    "left": 0,
                                                    "overflow": "hidden",
                                                    "position": "sticky",
                                                    "width": 0,
                                                  }
                                                }
                                              >
                                                <Empty
                                                  image={<Simple />}
                                                >
                                                  <LocaleReceiver
                                                    componentName="Empty"
                                                  >
                                                    <div
                                                      className="ant-empty ant-empty-normal"
                                                    >
                                                      <div
                                                        className="ant-empty-image"
                                                      >
                                                        <Simple>
                                                          <svg
                                                            className="ant-empty-img-simple"
                                                            height="41"
                                                            viewBox="0 0 64 41"
                                                            width="64"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <g
                                                              fill="none"
                                                              fillRule="evenodd"
                                                              transform="translate(0 1)"
                                                            >
                                                              <ellipse
                                                                className="ant-empty-img-simple-ellipse"
                                                                cx="32"
                                                                cy="33"
                                                                rx="32"
                                                                ry="7"
                                                              />
                                                              <g
                                                                className="ant-empty-img-simple-g"
                                                                fillRule="nonzero"
                                                              >
                                                                <path
                                                                  d="M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
                                                                />
                                                                <path
                                                                  className="ant-empty-img-simple-path"
                                                                  d="M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z"
                                                                />
                                                              </g>
                                                            </g>
                                                          </svg>
                                                        </Simple>
                                                      </div>
                                                      <div
                                                        className="ant-empty-description"
                                                      >
                                                        No Data
                                                      </div>
                                                    </div>
                                                  </LocaleReceiver>
                                                </Empty>
                                              </div>
                                            </td>
                                          </Cell>
                                        </tr>
                                      </ExpandedRow>
                                    </tbody>
                                  </Body>
                                </table>
                              </div>
                            </div>
                          </Component>
                        </div>
                      </ResizeObserver>
                    </Table>
                  </div>
                </div>
              </Spin>
            </div>
          </Table>
        </div>
      </div>
    </div>
  </AbstractTable>
</AbstractTableTest>
`;
